enum {
	DND_ARMOR_BONUS,
	DND_ARMOR_GREEN,
	DND_ARMOR_YELLOW,
	DND_ARMOR_BLUE,
	DND_ARMOR_RED,
	
	DND_ARMOR_GUNSLINGER,
	DND_ARMOR_OCCULT,
	DND_ARMOR_DEMO,
	DND_ARMOR_ENERGY,
	DND_ARMOR_ELEMENTAL,
	
	DND_ARMOR_SUPER,
	DND_ARMOR_CYBERNETIC,
	DND_ARMOR_DUELIST,
	DND_ARMOR_NECRO,
	DND_ARMOR_KNIGHT,
	DND_ARMOR_RAVAGER
};

const int DND_BASE_ARMORCAP = 300;

Actor DnD_ArmorType : DnD_Info { }

Actor DnD_ArmorBonus : BasicArmorBonus {
	Armor.SavePercent 33.335
	Armor.SaveAmount 1
	Armor.MaxSaveAmount 32766 //65000
	inventory.icon "BON2A0"
}

Actor NewArmorBonus : CustomInventory replaces ArmorBonus {
	Radius 20
	Height 16
	Renderstyle Translucent
	inventory.pickupmessage "\ccArmor pickup  : \c[Y5]Armor Bonus x 1\c-"
	inventory.pickupsound "items/armorbonus"
	+COUNTITEM
	States {
		Spawn:
			BON2 ABCDCB 4
		Loop
		Pickup:
			TNT1 A 0 A_JumpIfInventory("StatbuffCounter_ForbidArmor", 1, "Failed")
			TNT1 A 0 ACS_NamedExecuteAlways("DND Armor Give", 0, DND_ARMOR_BONUS, 1)
		Stop
		Failed:
			TNT1 A 0
		Stop
	}
}

Actor NewGreenArmor : BasicArmorPickup {
	Inventory.Icon "ARM1A0"
	Armor.SavePercent 33.335
	Armor.SaveAmount 1
}

Actor GreenArmorPickup_MP : DnD_SharedItem {
	States {
		Spawn:
			ARM1 A 1 NoDelay ACS_NamedExecuteAlways("DND Shared Item Init", 0, SHI_GREENARMOR)
			ARM1 A 34 ACS_NamedExecuteAlways("DnD Init Shared Translation", 0)
			TNT1 A 0 Thing_SetSpecial(0, 226, DND_SHARED_ITEM_SCRIPT, 0, tid)
		Idle:
			ARM1 AAAAAA 1 Light("GREENARMOR1") A_SpawnItemEx("InvulnerabilitySphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
			ARM1 BBBBBBB 1 Light("GREENARMOR2") Bright A_SpawnItemEx("InvulnerabilitySphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
		Loop
		IdlePicked:
			ARM1 C -1
		Stop
	}
}

Actor GreenArmor_SP : CustomInventory {
	inventory.pickupsound "Items/armor"
	inventory.pickupmessage "\ccArmor pickup  : \c[Y5]Green Armor 33%\c-"
	Height 16
	Radius 20
	States
	{
		Spawn:
			ARM1 AAAAAA 1 Light("GREENARMOR1") A_SpawnItemEx("InvulnerabilitySphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
			ARM1 BBBBBBB 1 Light("GREENARMOR2") Bright A_SpawnItemEx("InvulnerabilitySphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
		Loop
		Pickup:
			TNT1 A 0 A_JumpIf(1 == ACS_NamedExecuteWithResult("DND Armor Pickup Check", 100, DND_ARMOR_GREEN), "Success")
		Fail
		Success:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Armor Give", 0, DND_ARMOR_GREEN, 100)
		Stop
	}
}

Actor GreenArmorMsg : CustomInventory {
	States {
		Pickup:
			TNT1 A 0 ACS_NamedExecuteAlways("DnD Message Logger", 0, 3, SHI_GREENARMOR)
			TNT1 A 0 A_PlaySound("Items/armor", 6)
			TNT1 A 0 A_SetBlend("25 99 25", 0.6, 17)
		Stop
	}
}

Actor NewBlueArmor : BasicArmorPickup {
	Inventory.Icon "ARM2A0"
	Armor.SavePercent 50
	Armor.SaveAmount 1
}

Actor BlueArmorPickup_MP : DnD_SharedItem {
	States {
		Spawn:
			// the delay is needed for the tid to initialize
			ARM2 A 1 NoDelay ACS_NamedExecuteAlways("DND Shared Item Init", 0, SHI_BLUEARMOR)
			ARM2 A 34 ACS_NamedExecuteAlways("DnD Init Shared Translation", 0)
			TNT1 A 0 Thing_SetSpecial(0, 226, DND_SHARED_ITEM_SCRIPT, 0, tid)
		Idle:
			ARM2 AAAAAA 1 Light("BLUEARMOR1") A_SpawnItemEx("SoulSphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
			ARM2 BBBBBBB 1 Light("BLUEARMOR2") Bright A_SpawnItemEx("SoulSphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
		Loop
		IdlePicked:
			ARM2 C -1
		Stop
	}
}

Actor BlueArmor_SP : GreenArmor_SP {
	inventory.pickupsound "Items/armor"
	inventory.pickupmessage "\ccArmor pickup  : \c[Y5]Blue Armor 50%\c-"
	States
	{
		Spawn:
			ARM2 AAAAAA 1 Light("BLUEARMOR1") A_SpawnItemEx("SoulSphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
			ARM2 BBBBBBB 1 Light("BLUEARMOR2") Bright A_SpawnItemEx("SoulSphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
		Loop
		Pickup:
			TNT1 A 0 A_JumpIf(1 == ACS_NamedExecuteWithResult("DND Armor Pickup Check", 200, DND_ARMOR_BLUE), "Success")
		Fail
		Success:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Armor Give", 0, DND_ARMOR_BLUE, 200)
		Stop
	}
}

Actor BlueArmorMsg : CustomInventory {
	States {
		Pickup:
			TNT1 A 0 ACS_NamedExecuteAlways("DnD Message Logger", 0, 3, SHI_BLUEARMOR)
			TNT1 A 0 A_PlaySound("Items/armor", 6)
			TNT1 A 0 A_SetBlend("25 99 25", 0.6, 17)
		Stop
	}
}

Actor YellowArmor : BasicArmorPickup {
    Inventory.Icon "ARM3A0"
    Armor.SavePercent 41.6675
	Armor.SaveAmount 1
}

Actor YellowArmorPickup_MP : DnD_SharedItem {
	States {
		Spawn:
			// the delay is needed for the tid to initialize
			ARM3 A 1 NoDelay ACS_NamedExecuteAlways("DND Shared Item Init", 0, SHI_YELLOWARMOR)
			ARM3 A 34 ACS_NamedExecuteAlways("DnD Init Shared Translation", 0)
			TNT1 A 0 Thing_SetSpecial(0, 226, DND_SHARED_ITEM_SCRIPT, 0, tid)
		Idle:
			ARM3 AAAAAA 1 Light("YELLOWARMOR1")  A_SpawnItemEx("EvilSphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
			ARM3 BBBBBBB 1 Light("YELLOWARMOR2") Bright A_SpawnItemEx("EvilSphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
		Loop
		IdlePicked:
			ARM3 C -1
		Stop
	}
}

Actor YellowArmor_SP : GreenArmor_SP {
	inventory.pickupsound "Items/armor"
	inventory.pickupmessage "\ccArmor pickup  : \c[Y5]Yellow Armor 42%\c-"
	States
	{
		Spawn:
			ARM3 AAAAAA 1 Light("YELLOWARMOR1")  A_SpawnItemEx("EvilSphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
			ARM3 BBBBBBB 1 Light("YELLOWARMOR2") Bright A_SpawnItemEx("EvilSphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
		Loop
		Pickup:
			TNT1 A 0 A_JumpIf(1 == ACS_NamedExecuteWithResult("DND Armor Pickup Check", 150, DND_ARMOR_YELLOW), "Success")
		Fail
		Success:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Armor Give", 0, DND_ARMOR_YELLOW, 150)
		Stop
	}
}

Actor YellowArmorMsg : CustomInventory {
	States {
		Pickup:
			TNT1 A 0 ACS_NamedExecuteAlways("DnD Message Logger", 0, 3, SHI_YELLOWARMOR)
			TNT1 A 0 A_PlaySound("Items/armor", 6)
			TNT1 A 0 A_SetBlend("25 99 25", 0.6, 17)
		Stop
	}
}

Actor TheRedArmor : BasicArmorPickup {
	Inventory.Icon "QRARB0"
	Armor.Savepercent 75.0
	Armor.SaveAmount 1
}

Actor RedArmorPickup_MP : DnD_SharedItem {
	States {
		Spawn:
			QRAR A 1 NoDelay ACS_NamedExecuteAlways("DND Shared Item Init", 0, SHI_REDARMOR)
			QRAR A 34 ACS_NamedExecuteAlways("DnD Init Shared Translation", 0)
			TNT1 A 0 Thing_SetSpecial(0, 226, DND_SHARED_ITEM_SCRIPT, 0, tid)
		Idle:
			QRAR AAAAAAA 1 Light("THEREDARMOR1") Bright A_SpawnItemEx("UberSphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
			QRAR BBBBBB 1 Light("THEREDARMOR2") A_SpawnItemEx("UberSphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
		Loop
		IdlePicked:
			QRAR C -1
		Stop
	}
}

Actor RedArmor_SP : GreenArmor_SP {
	inventory.pickupsound "Items/armor"
	inventory.pickupmessage "\ccArmor pickup  : \c[Y5]Red Armor 75%\c-"
	States
	{
		Spawn:
			QRAR AAAAAAA 1 Light("THEREDARMOR1") Bright A_SpawnItemEx("UberSphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
			QRAR BBBBBB 1 Light("THEREDARMOR2") A_SpawnItemEx("UberSphereFX", random(-32, 32), random(-32, 32), random(0, 8), 0, 0, random(2,8), 0, SXF_CLIENTSIDE, 0)
		Loop
		Pickup:
			TNT1 A 0 A_JumpIf(1 == ACS_NamedExecuteWithResult("DND Armor Pickup Check", 300, DND_ARMOR_RED), "Success")
		Fail
		Success:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Armor Give", 0, DND_ARMOR_RED, 300)
		Stop
	}
}

Actor RedArmorMsg : CustomInventory {
	States {
		Pickup:
			TNT1 A 0 ACS_NamedExecuteAlways("DnD Message Logger", 0, 3, SHI_REDARMOR)
			TNT1 A 0 A_PlaySound("Items/armor", 6)
			TNT1 A 0 A_SetBlend("25 99 25", 0.6, 17)
		Stop
	}
}

Actor GreenArmorSpawner : Randomspawner replaces GreenArmor {
	DropItem "GreenArmorPickup_MP", 255, 16
	DropItem "YellowArmorPickup_MP", 255, 8
}

Actor BlueArmorSpawner : Randomspawner replaces BlueArmor
{
	DropItem "BlueArmorPickup_MP", 255, 16
	DropItem "RedArmorPickup_MP", 255, 4
}

Actor CyberneticArmor : BasicArmorPickup {
	Armor.SavePercent 45.0
	Armor.SaveAmount 1
	inventory.icon "ARM4A1"
}

Actor DuelistArmor : BasicArmorPickup {
	Armor.SavePercent 33.0
	Armor.SaveAmount 1

	DamageFactor "Bullet", 0.0
	DamageFactor "FattyBullet", 0.0
	DamageFactor "ArachnoBullet", 0.0
	DamageFactor "FattyBullet", 0.0
	DamageFactor "VileBullet", 0.0
	DamageFactor "BigSpiderBullet", 0.0
	DamageFactor "CyberBullet", 0.0
	
	inventory.icon "ARM5A0"
}

Actor NecroArmor : BasicArmorPickup {
	Armor.SavePercent 55.0
	Armor.SaveAmount 1
	inventory.icon "ARM6A0"
}

Actor KnightArmor : BasicArmorPickup {
	Armor.SavePercent 35.0
	Armor.SaveAmount 1
	
	DamageFactor "Physical", 0.5
	DamageFactor "Melee", 0.5
	
	inventory.icon "ARM7A0"
}

Actor RavagerArmor : BasicArmorPickup {
	Armor.SavePercent 25.0
	Armor.SaveAmount 1
	inventory.icon "ARM8A0"
}

Actor GunSlingerArmor : BasicArmorPickup {
	Armor.SavePercent 33.0
	Armor.SaveAmount 1

	DamageFactor "Bullet", 0.25
	DamageFactor "FattyBullet", 0.25
	DamageFactor "ArachnoBullet", 0.25
	DamageFactor "FattyBullet", 0.25
	DamageFactor "VileBullet", 0.25
	DamageFactor "BigSpiderBullet", 0.25
	DamageFactor "CyberBullet", 0.25
	
	inventory.icon "ARM9A0"
}

Actor OccultArmor : BasicArmorPickup {
	Armor.SavePercent 33.0
	Armor.SaveAmount 1
	
	DamageFactor "MagicExp", 0.25
	DamageFactor "MagicExpFull", 0.25
	DamageFactor "MagicFireExp", 0.25
	DamageFactor "MagicFireExpFull", 0.25
	DamageFactor "SoulTypeExp", 0.25
	DamageFactor "SoulTypeExpFull", 0.25
	
	DamageFactor "DemonMagic", 0.25
	DamageFactor "ImpMagic", 0.25
	DamageFactor "ImpVoid", 0.25
	DamageFactor "CacoMagic", 0.25
	DamageFactor "CacoMagicOrange", 0.25
	DamageFactor "PaineMagic", 0.25
	DamageFactor "PaineMagicFire", 0.25
	DamageFactor "RevMagic", 0.25
	DamageFactor "BaronsMagic", 0.25
	DamageFactor "BaronVoid", 0.25
	DamageFactor "BaronsMagicFire", 0.25
	DamageFactor "FattyVoidFire", 0.25
	DamageFactor "FattyMagic", 0.25
	DamageFactor "FatsoCorrupt", 0.25
	DamageFactor "ArachnoVoid", 0.25
	DamageFactor "VileMagic", 0.25
	DamageFactor "VileStun", 0.25
    DamageFactor "VileSlow", 0.25
    DamageFactor "VileSnare", 0.25
	DamageFactor "VileGhost", 0.25
	DamageFactor "VileCurse", 0.25
	DamageFactor "BigSpiderDark", 0.25
	DamageFactor "BigSpiderVoid", 0.25
    DamageFactor "BigSpiderTornado", 0.25
    DamageFactor "BigSpiderPercent", 0.25
	DamageFactor "CyberMagic", 0.25
	DamageFactor "CyberOrangeMagic", 0.25
	DamageFactor "DreamerBurner", 0.25
	DamageFactor "LegendarySlow50", 0.25
	DamageFactor "LegendaryWeaken75", 0.25
	
	inventory.icon "AR10A0"
}

Actor DemoArmor : BasicArmorPickup {
	Armor.SavePercent 33.0
	Armor.SaveAmount 1
	
	DamageFactor "Explosives", 0.25
	DamageFactor "ExplosivesFull", 0.25
	DamageFactor "Explosives_Magic", 0.25
	DamageFactor "Explosives_MagicFull", 0.25
	DamageFactor "EnergyExp", 0.25
	DamageFactor "EnergyExpFull", 0.25
	DamageFactor "MagicFireExp", 0.25
	DamageFactor "MagicFireExpFull", 0.25
	DamageFactor "SoulTypeExp", 0.25
	DamageFactor "SoulTypeExpFull", 0.25
	DamageFactor "FireExp", 0.25
	DamageFactor "FireExpFull", 0.25
	DamageFactor "MagicExp", 0.25
	DamageFactor "MagicExpFull", 0.25
	DamageFactor "LightningExp", 0.25
	DamageFactor "LightningExpFull", 0.25
	
	DamageFactor "Explosive", 0.25
	DamageFactor "CacoExp", 0.25
	DamageFactor "PaineExp", 0.25
	DamageFactor "RevExp", 0.25
	DamageFactor "BaronsExp", 0.25
	DamageFactor "FattyExp", 0.25
	DamageFactor "ArachnoExp", 0.25
	DamageFactor "BigSpiderExp", 0.25
	DamageFactor "CyberExp", 0.25
	DamageFactor "CyberGreenExp", 0.25
	
	inventory.icon "AR11A0"
}

Actor EnergyArmor : BasicArmorPickup {
	Armor.SavePercent 33.0
	Armor.SaveAmount 1
	
	DamageFactor "Energy", 0.25
	DamageFactor "EnergyExp", 0.25
	DamageFactor "EnergyExpFull", 0.25
	DamageFactor "Caco", 0.25
	DamageFactor "BaronPlasma", 0.25
	DamageFactor "FattyPlasma", 0.25
	DamageFactor "Arachno", 0.25
	DamageFactor "ArachnoGreen", 0.25
	DamageFactor "ArachnoYellow", 0.25
	DamageFactor "BigSpiderGreen", 0.25
	DamageFactor "BigSpiderYellow", 0.25
	DamageFactor "CyberGreen", 0.25
	DamageFactor "CyberEnergy", 0.25
	
	inventory.icon "AR12A1"
}

Actor ElementalArmor : BasicArmorPickup {
	Armor.SavePercent 33.0
	Armor.SaveAmount 1
	
	DamageFactor "LightningExp", 0.25
	DamageFactor "LightningExpFull", 0.25
	DamageFactor "MagicFireExp", 0.25
	DamageFactor "MagicFireExpFull", 0.25
	DamageFactor "DemonFire", 0.25
	DamageFactor "ImpFire", 0.25
	DamageFactor "CacoFire", 0.25
	DamageFactor "CacoPoison", 0.25
	DamageFactor "ImpPoison_Vulgar", 0.25
	DamageFactor "ImpPoison_Roach", 0.25
	DamageFactor "PaineFire", 0.25
	DamageFactor "PainePoison", 0.25
	DamageFactor "RevIce", 0.25
	DamageFactor "RevSludge", 0.25
	DamageFactor "RevPoison_Crawler", 0.25
    DamageFactor "BaronsPoison", 0.25
    DamageFactor "BaronsFire", 0.25
    DamageFactor "BaronGreen", 0.25
    DamageFactor "BaronGreenFire", 0.25
    DamageFactor "FattyFire", 0.25
    DamageFactor "FattyIce", 0.25
	DamageFactor "ArachnoFire", 0.25
	DamageFactor "VileFire", 0.25
    DamageFactor "VileBlue", 0.25
    DamageFactor "VileBlueFire", 0.25
	DamageFactor "BigSpiderFire", 0.25
	DamageFactor "BigSpiderIce", 0.25
	DamageFactor "CyberFire", 0.25
	DamageFactor "CyberLightning", 0.25
	DamageFactor "CyberIce", 0.25
	
	inventory.icon "AR14A0"
}

Actor SuperArmor : BasicArmorPickup {
	Armor.SavePercent 100.0
	Armor.SaveAmount 1
	Inventory.Icon "AR13A0"
}

Actor NecroSpikeShooter : DnD_Activator {
	States {
		Use:
			TNT1 A 0 A_SpawnItemEx("NecroSpikeSpawner", 0, 0, 32, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
		Stop
	}
}

Actor NecroSpikeCooldown : PowerProtection {
	damagefactor "normal", 1.0
	powerup.duration 17
}

Actor NecroSpikeSpawner {
	Height 1
	Radius 1
	Speed 0
	+THRUACTORS
	+MISSILE
	+NOGRAVITY
	var int user_counter;
	const int steps = 36;
	States {
		Spawn:
			TNT1 A 0 NoDelay A_SetUserVar("user_counter", 0)
			TNT1 A 0 A_JumpIfInTargetInventory("NetherCheck", 1, "FullLoop")
		SpawnLoop:
			TNT1 A 0 A_JumpIf(user_counter == steps, "Finish")
			TNT1 A 0 A_CustomMissile("NecroSpike", 0, 0, user_counter * 360 / steps, CMF_TRACKOWNER | CMF_AIMDIRECTION)
			TNT1 A 0 A_SetUserVar("user_counter", user_counter + 1)
		Loop
		FullLoop:
			TNT1 A 0 A_JumpIf(user_counter == steps, "Finish")
			TNT1 A 0 A_CustomMissile("NecroSpike_Full", 0, 0, user_counter * 360 / steps, CMF_TRACKOWNER | CMF_AIMDIRECTION)
			TNT1 A 0 A_SetUserVar("user_counter", user_counter + 1)
		Loop
		Finish:
			TNT1 A 1
		Stop
	}
}

Actor NecroSpike {
	PROJECTILE
	Speed 32
	Radius 6
	Height 12
	Damage (ACS_NamedExecuteWithResult("DND Player Damage Scale", 8 * random(6, 8), TALENT_OCCULT, DND_USETARGET | DND_NECROBULK | DND_HASSTRSCALING))
	DamageType "Magic"
	SeeSound "Armors/NecroShard"
	DeathSound "Armors/NecroShardHit"
	Species "Player"
	+THRUSPECIES
	+FOILINVUL
	+DONTREFLECT
	States {
		Spawn:
			WBON A 1
		Loop
		Death:
			TNT1 AAA 0 A_CustomMissile("FireballSmoke", 0, 0, random(0,360), 2, random(0,360))
			HHPF ABCDEF 3
		Stop
	}
}

Actor NecroSpike_Full : NecroSpike {
	DamageType "MagicFull"
}

Actor CyberneticEffect : DnD_Activator {
	States {
		Pickup:
			TNT1 A 0 A_SpawnItem("CyberneticEffectSpawner")
			TNT1 A 0 A_SetBlend("24 36 90", 0.3, 15)
		Stop
	}
}

Actor KnightProtection : PowerProtection {
	damagefactor "normal", 0.6
	powerup.duration 0x7FFFFFFF
}

Actor RavagerPower : PowerDamage {
	damagefactor "normal", 2.0
	powerup.duration -4
	powerup.color "72 24 24"
}

Actor RavagerPowerDefense : PowerProtection {
	damagefactor "normal", 0.75
	powerup.duration -4
}

Actor RavagerEffect : DnD_Activator {
	States {
		Pickup:
			TNT1 A 0 A_SpawnItem("DarkHealEffectSpawner")
			TNT1 A 0 A_SetBlend("72 24 24", 0.3, 15)
		Stop
	}
}

Actor GunslingerPower : PowerDamage {
	damagefactor "normal", 1.0
	damagefactor "Bullet", 1.5
	damagefactor "BulletFull", 1.5
	powerup.duration 0x7FFFFFFF
}

Actor OccultPower : PowerDamage {
	damagefactor "normal", 1.0
	damagefactor "Melee_Magic", 1.5
	damagefactor "Melee_MagicFull", 1.5
	damagefactor "Magic", 1.5
	damagefactor "MagicFull", 1.5
	damagefactor "Explosives_Magic", 1.5
	damagefactor "Explosives_MagicFull", 1.5
	damagefactor "MagicFire", 1.5
	damagefactor "MagicFireFull", 1.5
	damagefactor "SoulType", 1.5
	damagefactor "SoulTypeFull", 1.5
	damagefactor "SoulTypeExp", 1.5
	damagefactor "SoulTypeExpFull", 1.5
	damagefactor "MagicExp", 1.5
	damagefactor "MagicFireExp", 1.5
	damagefactor "MagicExpFull", 1.5
	damagefactor "MagicFireExpFull", 1.5
	powerup.duration 0x7FFFFFFF
}

Actor DemoPower : PowerDamage {
	damagefactor "normal", 1.0
	damagefactor "Explosives", 1.5
	damagefactor "ExplosivesFull", 1.5
	powerup.duration 0x7FFFFFFF
}

Actor EnergyPower : PowerDamage {
	damagefactor "normal", 1.0
	damagefactor "P_Rail", 1.5
	damagefactor "P_RailFull", 1.5
	damagefactor "Energy", 1.5
	damagefactor "EnergyFull", 1.5
	damagefactor "EnergyExp", 1.5
	damagefactor "EnergyExpFull", 1.5
	powerup.duration 0x7FFFFFFF
}

Actor ElementalPower : PowerDamage {
	damagefactor "normal", 1.0
	damagefactor "Fire", 1.5
	damagefactor "FireFull", 1.5
	DamageFactor "Melee_Fire", 1.5
	DamageFactor "Melee_FireFull", 1.5
	damagefactor "FireExp", 1.5
	damagefactor "FireExpFull", 1.5
	
	damagefactor "Lightning", 1.5
	damagefactor "LightningFull", 1.5
	damagefactor "FireExpFull", 1.5
	damagefactor "LightningExpFull", 1.5
	
	damagefactor "P_Ice", 1.5
	damagefactor "P_IceFull", 1.5
	
	damagefactor "AcidRifle", 1.5
	damagefactor "AcidRifleFull", 1.5
	damagefactor "Desolator", 1.5
	damagefactor "DesolatorFull", 1.5
	damagefactor "Emerald", 1.5
	damagefactor "EmeraldFull", 1.5
	
	powerup.duration 0x7FFFFFFF
}