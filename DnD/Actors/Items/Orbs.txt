enum {
	DND_ORB_ENHANCE,
	DND_ORB_CORRUPT,
	DND_ORB_SPIRIT,
	DND_ORB_REPENT,
	DND_ORB_AFFLUENCE,
	DND_ORB_CALAMITY,
	DND_ORB_PROSPERITY,
	DND_ORB_WISDOM,
	DND_ORB_GREED,
	DND_ORB_VIOLENCE,
	DND_ORB_FORTITUDE,
	DND_ORB_SIN,
	DND_ORB_RICHES,
	DND_ORB_HOLDING,
	DND_ORB_REFINEMENT,
	DND_ORB_SCULPTING,
	DND_ORB_ELEVATION
};

// a little precaution for database operation and acs syncs to work properly
Actor OrbUseDelay : PowerDamage {
	damagefactor "normal", 1.0
	powerup.duration 7
}

Actor OrbUseType : Inventory {
	inventory.maxamount 0x7FFFFFFF
}

Actor OrbResult : Inventory {
	inventory.maxamount 0x7FFFFFFF
}

Actor AffluenceCounter : Inventory {
	inventory.maxamount 4
}

Actor OrbSoundPlayer : DnD_Activator {
	States {
		Pickup:
			TNT1 A 0 A_PlaySound("Items/OrbPick", 7)
			TNT1 A 0 A_SetBlend("45 99 45", 0.6, 17)
		Stop
	}
}

Actor OrbDrop : InventoryBase {
	Renderstyle Translucent
	Alpha 0.0
	States {		
		PickupSuccess:
			TNT1 A 8 ACS_NamedExecuteAlways("DnD Stacked Item Pickup", 0, mass - 1, DND_STACKEDITEM_ORB)
		stop
	}
}

Actor OrbOfEnhancement : OrbDrop {
	States {
		Spawn:
			ORB1 C 0 Bright
		Goto Super::SpawnInit
	}
}

Actor CorruptOrb_DamageReduction : PowerDamage {
	powerup.duration 0x7FFFFFFF
	damagefactor "normal", 0.25
}

Actor OrbofCorruption : OrbDrop {
	states {
		Spawn:
			ORB1 A 0
		Goto SpawnInit
		// gotta replace all otherwise won't work, couldn't get animations to be working cleaner
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_CHARM)
			"####" "#" 1 Bright
			"####" "#" 23 Bright ACS_NamedExecuteAlways("DnD Item Linger Check")
			"####" "#" 1 Bright A_SetTranslucent(1.0)
		SpawnLoop:
		Idle:
			"####" "#" 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			"####" "#" 0 A_FadeOut(0.075)
			"####" "#" 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			"####" "#" 0 A_FadeOut(0.075)
			"####" "#" 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			"####" "#" 0 A_FadeOut(0.075)
			"####" "#" 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			"####" "#" 0 A_FadeOut(0.075)
			"####" "#" 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			"####" "#" 0 A_FadeOut(0.075)
			"####" "#" 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			"####" "#" 0 A_FadeOut(0.075)
			"####" "#" 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			"####" "#" 0 A_FadeIn(0.075)
			"####" "#" 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			"####" "#" 0 A_FadeIn(0.075)
			"####" "#" 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			"####" "#" 0 A_FadeIn(0.075)
			"####" "#" 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			"####" "#" 0 A_FadeIn(0.075)
			"####" "#" 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			"####" "#" 0 A_FadeIn(0.075)
			"####" "#" 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			"####" "#" 0 A_FadeIn(0.075)
		Loop
		CheckPickup:
			"####" "#" 1 Bright A_JumpIfCloser(32, "Pickup")
		goto SpawnLoop
		
		PickupFail:
			"####" "#" 1 Bright
		goto SpawnLoop
		
		// states are copied to fix an animation problem... don't remove
		Pickup:
			"####" "#" 1 Bright A_JumpIf(ACS_NamedExecuteWithResult("DnD Check Special Match", DND_SPECIAL_CHARM), "PickupCheck2")
		goto PickupFail

		PickupFail:
			"####" "#" 1 Bright
		goto SpawnLoop
		
		PickupCheck2:
			// Check if player has remaining inventory space
			"####" "#" 0 A_JumpIf(ACS_NamedExecuteWithResult("DnD Player Has Spot For Item", mass - 1), "PickupSuccess")
		Goto PickupShowItem
		
		PickupShowItem:
			"####" "#" 0 A_JumpIfInTargetInventory("DnD_PlayerViewsItem", 1, "PickupFail")
			"####" "#" 0 A_JumpIfInTargetInventory("ShowingMenu", 1, "PickupFail")
			"####" "#" 0 A_GiveToTarget("DnD_PlayerViewsItem", 1)
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Preview Item", 0, mass - 1, ACS_NamedExecuteWithResult("DnD Get Target"))
		Goto PickupFail
		
		PickupSuccess:
			TNT1 A 8 ACS_NamedExecuteAlways("DnD Stacked Item Pickup", 0, mass - 1, DND_STACKEDITEM_ORB)
		stop
	}
}

Actor OrbofSpirit : OrbDrop {
	states {
		Spawn:
			ORB1 E 0
		Goto SpawnInit
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_CHARM)
			"####" "#" 1 Bright
			"####" "#" 24 Bright ACS_NamedExecuteAlways("DnD Item Linger Check")
		SpawnLoop:
		Idle:
			ORB1 FFFGGGHHHEEE 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
		
		See:
		CheckPickup:
			"####" "#" 1 Bright A_JumpIfCloser(32, "Pickup")
		goto SpawnLoop
		
		PickupFail:
			"####" "#" 1 Bright
		goto SpawnLoop
		
		Pickup:
			"####" "#" 1 Bright A_JumpIf(ACS_NamedExecuteWithResult("DnD Check Special Match", DND_SPECIAL_CHARM), "PickupCheck2")
		goto PickupFail
		
		PickupCheck2:
			// Check if player has remaining inventory space
			"####" "#" 0 A_JumpIf(ACS_NamedExecuteWithResult("DnD Player Has Spot For Item", mass - 1), "PickupSuccess")
		Goto PickupShowItem
		
		PickupShowItem:
			"####" "#" 0 A_JumpIfInTargetInventory("DnD_PlayerViewsItem", 1, "PickupFail")
			"####" "#" 0 A_JumpIfInTargetInventory("ShowingMenu", 1, "PickupFail")
			"####" "#" 0 A_GiveToTarget("DnD_PlayerViewsItem", 1)
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Preview Item", 0, mass - 1, ACS_NamedExecuteWithResult("DnD Get Target"))
		Goto PickupFail
		
		PickupSuccess:
			TNT1 A 8 ACS_NamedExecuteAlways("DnD Stacked Item Pickup", 0, mass - 1, DND_STACKEDITEM_ORB)
		stop
	}
}

Actor OrbofRepentance : OrbDrop {
	states {
		Spawn:
			ORB1 T 0
		Goto SpawnInit
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_CHARM)
			"####" "#" 1 Bright
			"####" "#" 24 Bright ACS_NamedExecuteAlways("DnD Item Linger Check")
		SpawnLoop:
		Idle:
			ORB1 UUUVVVWWWXXXTTT 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
		
		See:
		CheckPickup:
			"####" "#" 1 Bright A_JumpIfCloser(32, "Pickup")
		goto SpawnLoop
		
		Pickup:
			"####" "#" 1 Bright A_JumpIf(ACS_NamedExecuteWithResult("DnD Check Special Match", DND_SPECIAL_CHARM), "PickupCheck2")
		goto PickupFail

		PickupFail:
			"####" "#" 1 Bright
		goto SpawnLoop
		
		PickupCheck2:
			// Check if player has remaining inventory space
			"####" "#" 0 A_JumpIf(ACS_NamedExecuteWithResult("DnD Player Has Spot For Item", mass - 1), "PickupSuccess")
		Goto PickupShowItem
		
		PickupShowItem:
			"####" "#" 0 A_JumpIfInTargetInventory("DnD_PlayerViewsItem", 1, "PickupFail")
			"####" "#" 0 A_JumpIfInTargetInventory("ShowingMenu", 1, "PickupFail")
			"####" "#" 0 A_GiveToTarget("DnD_PlayerViewsItem", 1)
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Preview Item", 0, mass - 1, ACS_NamedExecuteWithResult("DnD Get Target"))
		Goto PickupFail
		
		PickupSuccess:
			TNT1 A 8 ACS_NamedExecuteAlways("DnD Stacked Item Pickup", 0, mass - 1, DND_STACKEDITEM_ORB)
		stop
	}
}

Actor OrbofAffluence : OrbDrop {
	states {
		Spawn:
			ORB2 W 0
		Goto SpawnInit
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_CHARM)
			"####" "#" 1 Bright
			"####" "#" 24 Bright ACS_NamedExecuteAlways("DnD Item Linger Check")
		SpawnLoop:
		Idle:
			ORB2 XXXYYYZZZYYYXXXWWW 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
		
		See:
		CheckPickup:
			"####" "#" 1 Bright A_JumpIfCloser(32, "Pickup")
		goto SpawnLoop
		
		Pickup:
			"####" "#" 1 Bright A_JumpIf(ACS_NamedExecuteWithResult("DnD Check Special Match", DND_SPECIAL_CHARM), "PickupCheck2")
		goto PickupFail

		PickupFail:
			"####" "#" 1 Bright
		goto SpawnLoop
		
		PickupCheck2:
			// Check if player has remaining inventory space
			"####" "#" 0 A_JumpIf(ACS_NamedExecuteWithResult("DnD Player Has Spot For Item", mass - 1), "PickupSuccess")
		Goto PickupShowItem
		
		PickupShowItem:
			"####" "#" 0 A_JumpIfInTargetInventory("DnD_PlayerViewsItem", 1, "PickupFail")
			"####" "#" 0 A_JumpIfInTargetInventory("ShowingMenu", 1, "PickupFail")
			"####" "#" 0 A_GiveToTarget("DnD_PlayerViewsItem", 1)
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Preview Item", 0, mass - 1, ACS_NamedExecuteWithResult("DnD Get Target"))
		Goto PickupFail
		
		PickupSuccess:
			TNT1 A 8 ACS_NamedExecuteAlways("DnD Stacked Item Pickup", 0, mass - 1, DND_STACKEDITEM_ORB)
		stop
	}
}

Actor OrbofCalamity : OrbDrop {
	states {
		Spawn:
			ORB1 J 0
		Goto SpawnInit
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_CHARM)
			"####" "#" 1 Bright
			"####" "#" 24 Bright ACS_NamedExecuteAlways("DnD Item Linger Check")
		SpawnLoop:
		Idle:
			ORB1 KKKLLLMMMJJJ 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
		
		See:
		CheckPickup:
			"####" "#" 1 Bright A_JumpIfCloser(32, "Pickup")
		goto SpawnLoop
		
		Pickup:
			"####" "#" 1 Bright A_JumpIf(ACS_NamedExecuteWithResult("DnD Check Special Match", DND_SPECIAL_CHARM), "PickupCheck2")
		goto PickupFail

		PickupFail:
			"####" "#" 1 Bright
		goto SpawnLoop
		
		PickupCheck2:
			// Check if player has remaining inventory space
			"####" "#" 0 A_JumpIf(ACS_NamedExecuteWithResult("DnD Player Has Spot For Item", mass - 1), "PickupSuccess")
		Goto PickupShowItem
		
		PickupShowItem:
			"####" "#" 0 A_JumpIfInTargetInventory("DnD_PlayerViewsItem", 1, "PickupFail")
			"####" "#" 0 A_JumpIfInTargetInventory("ShowingMenu", 1, "PickupFail")
			"####" "#" 0 A_GiveToTarget("DnD_PlayerViewsItem", 1)
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Preview Item", 0, mass - 1, ACS_NamedExecuteWithResult("DnD Get Target"))
		Goto PickupFail
		
		PickupSuccess:
			TNT1 A 8 ACS_NamedExecuteAlways("DnD Stacked Item Pickup", 0, mass - 1, DND_STACKEDITEM_ORB)
		stop
	}
}

Actor OrbofProsperity : OrbDrop {
	states {
		Spawn:
			ORB1 O 0
		Goto SpawnInit
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_CHARM)
			"####" "#" 1 Bright
			"####" "#" 24 Bright ACS_NamedExecuteAlways("DnD Item Linger Check")
		SpawnLoop:
		Idle:
			ORB1 PPPQQQRRROOO 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
		
		See:
		CheckPickup:
			"####" "#" 1 Bright A_JumpIfCloser(32, "Pickup")
		goto SpawnLoop
		
		Pickup:
			"####" "#" 1 Bright A_JumpIf(ACS_NamedExecuteWithResult("DnD Check Special Match", DND_SPECIAL_CHARM), "PickupCheck2")
		goto PickupFail

		PickupFail:
			"####" "#" 1 Bright
		goto SpawnLoop
		
		PickupCheck2:
			// Check if player has remaining inventory space
			"####" "#" 0 A_JumpIf(ACS_NamedExecuteWithResult("DnD Player Has Spot For Item", mass - 1), "PickupSuccess")
		Goto PickupShowItem
		
		PickupShowItem:
			"####" "#" 0 A_JumpIfInTargetInventory("DnD_PlayerViewsItem", 1, "PickupFail")
			"####" "#" 0 A_JumpIfInTargetInventory("ShowingMenu", 1, "PickupFail")
			"####" "#" 0 A_GiveToTarget("DnD_PlayerViewsItem", 1)
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Preview Item", 0, mass - 1, ACS_NamedExecuteWithResult("DnD Get Target"))
		Goto PickupFail
		
		PickupSuccess:
			TNT1 A 8 ACS_NamedExecuteAlways("DnD Stacked Item Pickup", 0, mass - 1, DND_STACKEDITEM_ORB)
		stop
	}
}

Actor OrbofWisdom : OrbDrop {
	states {
		Spawn:
			ORB2 F 0
		Goto SpawnInit
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_CHARM)
			"####" "#" 1 Bright
			"####" "#" 24 Bright ACS_NamedExecuteAlways("DnD Item Linger Check")
		SpawnLoop:
		Idle:
			ORB2 GGGHHHIIIFFF 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
		
		See:
		CheckPickup:
			"####" "#" 1 Bright A_JumpIfCloser(32, "Pickup")
		goto SpawnLoop
		
		Pickup:
			"####" "#" 1 Bright A_JumpIf(ACS_NamedExecuteWithResult("DnD Check Special Match", DND_SPECIAL_CHARM), "PickupCheck2")
		goto PickupFail

		PickupFail:
			"####" "#" 1 Bright
		goto SpawnLoop
		
		PickupCheck2:
			// Check if player has remaining inventory space
			"####" "#" 0 A_JumpIf(ACS_NamedExecuteWithResult("DnD Player Has Spot For Item", mass - 1), "PickupSuccess")
		Goto PickupShowItem
		
		PickupShowItem:
			"####" "#" 0 A_JumpIfInTargetInventory("DnD_PlayerViewsItem", 1, "PickupFail")
			"####" "#" 0 A_JumpIfInTargetInventory("ShowingMenu", 1, "PickupFail")
			"####" "#" 0 A_GiveToTarget("DnD_PlayerViewsItem", 1)
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Preview Item", 0, mass - 1, ACS_NamedExecuteWithResult("DnD Get Target"))
		Goto PickupFail
		
		PickupSuccess:
			TNT1 A 8 ACS_NamedExecuteAlways("DnD Stacked Item Pickup", 0, mass - 1, DND_STACKEDITEM_ORB)
		stop
	}
}

Actor OrbofGreed : OrbDrop {
	states {
		Spawn:
			ORB3 B 0
		Goto SpawnInit
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_CHARM)
			"####" "#" 1 Bright
			"####" "#" 24 Bright ACS_NamedExecuteAlways("DnD Item Linger Check")
		SpawnLoop:
		Idle:
			ORB3 CCCDDDCCCBBB 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
		
		See:
		CheckPickup:
			"####" "#" 1 Bright A_JumpIfCloser(32, "Pickup")
		goto SpawnLoop
		
		Pickup:
			"####" "#" 1 Bright A_JumpIf(ACS_NamedExecuteWithResult("DnD Check Special Match", DND_SPECIAL_CHARM), "PickupCheck2")
		goto PickupFail

		PickupFail:
			"####" "#" 1 Bright
		goto SpawnLoop
		
		PickupCheck2:
			// Check if player has remaining inventory space
			"####" "#" 0 A_JumpIf(ACS_NamedExecuteWithResult("DnD Player Has Spot For Item", mass - 1), "PickupSuccess")
		Goto PickupShowItem
		
		PickupShowItem:
			"####" "#" 0 A_JumpIfInTargetInventory("DnD_PlayerViewsItem", 1, "PickupFail")
			"####" "#" 0 A_JumpIfInTargetInventory("ShowingMenu", 1, "PickupFail")
			"####" "#" 0 A_GiveToTarget("DnD_PlayerViewsItem", 1)
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Preview Item", 0, mass - 1, ACS_NamedExecuteWithResult("DnD Get Target"))
		Goto PickupFail
		
		PickupSuccess:
			TNT1 A 8 ACS_NamedExecuteAlways("DnD Stacked Item Pickup", 0, mass - 1, DND_STACKEDITEM_ORB)
		stop
	}
}

Actor OrbofViolence : OrbDrop {
	states {
		Spawn:
			ORB2 K 0
		Goto SpawnInit
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_CHARM)
			"####" "#" 1 Bright
			"####" "#" 24 Bright ACS_NamedExecuteAlways("DnD Item Linger Check")
		SpawnLoop:
		Idle:
			ORB2 LLLMMMNNNKKK 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
		
		See:
		CheckPickup:
			"####" "#" 1 Bright A_JumpIfCloser(32, "Pickup")
		goto SpawnLoop
		
		Pickup:
			"####" "#" 1 Bright A_JumpIf(ACS_NamedExecuteWithResult("DnD Check Special Match", DND_SPECIAL_CHARM), "PickupCheck2")
		goto PickupFail

		PickupFail:
			"####" "#" 1 Bright
		goto SpawnLoop
		
		PickupCheck2:
			// Check if player has remaining inventory space
			"####" "#" 0 A_JumpIf(ACS_NamedExecuteWithResult("DnD Player Has Spot For Item", mass - 1), "PickupSuccess")
		Goto PickupShowItem
		
		PickupShowItem:
			"####" "#" 0 A_JumpIfInTargetInventory("DnD_PlayerViewsItem", 1, "PickupFail")
			"####" "#" 0 A_JumpIfInTargetInventory("ShowingMenu", 1, "PickupFail")
			"####" "#" 0 A_GiveToTarget("DnD_PlayerViewsItem", 1)
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Preview Item", 0, mass - 1, ACS_NamedExecuteWithResult("DnD Get Target"))
		Goto PickupFail
		
		PickupSuccess:
			TNT1 A 8 ACS_NamedExecuteAlways("DnD Stacked Item Pickup", 0, mass - 1, DND_STACKEDITEM_ORB)
		stop
	}
}

Actor OrbofFortitude : OrbDrop {
	states {
		Spawn:
			ORB2 P 0
		Goto SpawnInit
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_CHARM)
			"####" "#" 1 Bright
			"####" "#" 24 Bright ACS_NamedExecuteAlways("DnD Item Linger Check")
		SpawnLoop:
		Idle:
			ORB2 QQRRSSTTUUPP 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
		
		See:
		CheckPickup:
			"####" "#" 1 Bright A_JumpIfCloser(32, "Pickup")
		goto SpawnLoop
		
		Pickup:
			"####" "#" 1 Bright A_JumpIf(ACS_NamedExecuteWithResult("DnD Check Special Match", DND_SPECIAL_CHARM), "PickupCheck2")
		goto PickupFail

		PickupFail:
			"####" "#" 1 Bright
		goto SpawnLoop
		
		PickupCheck2:
			// Check if player has remaining inventory space
			"####" "#" 0 A_JumpIf(ACS_NamedExecuteWithResult("DnD Player Has Spot For Item", mass - 1), "PickupSuccess")
		Goto PickupShowItem
		
		PickupShowItem:
			"####" "#" 0 A_JumpIfInTargetInventory("DnD_PlayerViewsItem", 1, "PickupFail")
			"####" "#" 0 A_JumpIfInTargetInventory("ShowingMenu", 1, "PickupFail")
			"####" "#" 0 A_GiveToTarget("DnD_PlayerViewsItem", 1)
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Preview Item", 0, mass - 1, ACS_NamedExecuteWithResult("DnD Get Target"))
		Goto PickupFail
		
		PickupSuccess:
			TNT1 A 8 ACS_NamedExecuteAlways("DnD Stacked Item Pickup", 0, mass - 1, DND_STACKEDITEM_ORB)
		stop
	}
}

Actor OrbofSin : OrbDrop {
	states {
		Spawn:
			ORB2 A 0
		Goto SpawnInit
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_CHARM)
			"####" "#" 1 Bright
			"####" "#" 24 Bright ACS_NamedExecuteAlways("DnD Item Linger Check")
		SpawnLoop:
		Idle:
			ORB2 BBBCCCDDDAAA 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
		
		See:
		CheckPickup:
			"####" "#" 1 Bright A_JumpIfCloser(32, "Pickup")
		goto SpawnLoop
		
		Pickup:
			"####" "#" 1 Bright A_JumpIf(ACS_NamedExecuteWithResult("DnD Check Special Match", DND_SPECIAL_CHARM), "PickupCheck2")
		goto PickupFail

		PickupFail:
			"####" "#" 1 Bright
		goto SpawnLoop
		
		PickupCheck2:
			// Check if player has remaining inventory space
			"####" "#" 0 A_JumpIf(ACS_NamedExecuteWithResult("DnD Player Has Spot For Item", mass - 1), "PickupSuccess")
		Goto PickupShowItem
		
		PickupShowItem:
			"####" "#" 0 A_JumpIfInTargetInventory("DnD_PlayerViewsItem", 1, "PickupFail")
			"####" "#" 0 A_JumpIfInTargetInventory("ShowingMenu", 1, "PickupFail")
			"####" "#" 0 A_GiveToTarget("DnD_PlayerViewsItem", 1)
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Preview Item", 0, mass - 1, ACS_NamedExecuteWithResult("DnD Get Target"))
		Goto PickupFail
		
		PickupSuccess:
			TNT1 A 8 ACS_NamedExecuteAlways("DnD Stacked Item Pickup", 0, mass - 1, DND_STACKEDITEM_ORB)
		stop
	}
}

Actor OrbofRiches : OrbDrop {
	states {
		Spawn:
			ORB3 F 0
		Goto SpawnInit
	}
}

Actor OrbofHolding : OrbDrop {
	states {
		Spawn:
			ORB3 H 0
		Goto SpawnInit
	}
}

Actor OrbofRefinement : OrbDrop {
	states {
		Spawn:
			ORB3 J 0
		Goto SpawnInit
	}
}

Actor OrbofSculpting : OrbDrop {
	states {
		Spawn:
			ORB3 L 0
		Goto SpawnInit
	}
}

Actor OrbofElevation : OrbDrop {
	states {
		Spawn:
			ORB3 N 0
		Goto SpawnInit
	}
}