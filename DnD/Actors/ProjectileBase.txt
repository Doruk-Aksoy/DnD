enum {
	DND_ARG_DAMAGE,
	DND_ARG_DAMAGETYPE,
	DND_ARG_DAMAGEFLAGS
};

enum {
	DND_ARG_SHOTGUNPELLETS = 2,
	DND_ARG_SHOTGUNDAMAGE = 3,
	DND_ARG_SHOTGUNTEMP = 4
};

Actor DnD_ShotgunDamageHolder : DnD_Info { }

Actor DnD_ExplosiveBase {
	PROJECTILE
	Damage 0
	+HITTRACER
	+MTHRUSPECIES
	
	var int user_expdmg;
	var int user_expradius;
	var int user_fullexpradius;
	var int user_damagetype;
	
	const int r_f = 8;
	
	States {
		Spawn:
			TNT1 A 0 NoDelay A_GiveInventory("DnD_Projectile_SpawnChecks", 1)
			TNT1 A 35 A_Jump(256, "SpawnState")
		Wait
		DoExplosionDamage:
			"####" "#" 0 ACS_NamedExecuteWithResult("DnD Register Explosion Instance")
		Goto HandoutItem
		HandoutItem:
			/*"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 63, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 62, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 61, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 60, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 59, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 58, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 57, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 56, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 55, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 54, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 53, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 52, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 51, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 50, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 49, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 48, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 47, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")*/
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 1, "Exp1")
		Goto Exp0
		Exp1:
			"####" "#" 0 A_RadiusGive("DnD_ExplosionRegisterItem_1", user_expradius * r_f, RGF_MONSTERS, 1)
		Goto DealExplosionDamage
		Exp0:
			//"####" "#" 0 ACS_NamedExecuteWithResult("tester shit")
			"####" "#" 0 A_RadiusGive("DnD_ExplosionRegisterItem_0", user_expradius * r_f, RGF_MONSTERS, 1)
		Goto DealExplosionDamage
		DealExplosionDamage:
			"####" "#" 0 ACS_NamedExecuteWithResult("DnD Do Explosion Damage", user_expdmg, user_expradius, user_fullexpradius, user_damagetype)
			"####" "#" 35 A_Jump(256, "ContinueFromExplosion")
		Wait
	}
}

Actor DnD_ExplosiveBase_ForPets {
	PROJECTILE
	+HITTRACER
	+MTHRUSPECIES
	
	var int user_expdmg;
	var int user_expradius;
	var int user_fullexpradius;
	var int user_damagetype;
	
	States {
		// for pets check master's inventory
		DoExplosionDamage:
			"####" "#" 0 ACS_NamedExecuteWithResult("DnD Register Explosion Instance (Pets)")
		Goto HandoutItem
		HandoutItem:
			/*"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 63, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 62, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 61, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 60, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 59, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 58, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 57, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 56, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 55, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 54, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 53, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 52, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 51, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 50, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 49, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 48, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 47, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 64, "Exp64")*/
			"####" "#" 0 A_JumpIfInventory("DnD_ProjPnum", 1, "Exp1")
		Goto Exp0
		Exp1:
			"####" "#" 0 A_RadiusGive("DnD_ExplosionRegisterItem_1", user_expradius * 2, RGF_MONSTERS, 1)
		Goto DealExplosionDamage
		Exp0:
			"####" "#" 0 A_RadiusGive("DnD_ExplosionRegisterItem_0", user_expradius * 2, RGF_MONSTERS, 1)
		Goto DealExplosionDamage
		DealExplosionDamage:
			"####" "#" 0 ACS_NamedExecuteWithResult("DnD Do Explosion Damage (Pets)", user_expdmg, user_expradius, user_fullexpradius, user_damagetype)
			"####" "#" 35 A_Jump(256, "ContinueFromExplosion")
		Wait
	}
}

Actor DnD_ProjPnum : DnD_Info { }

Actor DnD_ExplosionRegisterItem_0 : DnD_Activator {
	States {
		Pickup:
			TNT1 A 0 ACS_NamedExecuteWithResult("DnD Register Monster to Instance", 0)
		Stop
	}
}

Actor DnD_ExplosionRegisterItem_1 : DnD_Activator {
	States {
		Pickup:
			TNT1 A 0 ACS_NamedExecuteWithResult("DnD Register Monster to Instance", 1)
		Stop
	}
}

Actor DnD_TestExploder : DnD_ExplosiveBase {
	Height 6
	Radius 3
	Speed 40
	Damage 0
	States {
		Spawn:
			SARG A 1
		Loop
		Death:
			TNT1 A 0 A_SetUserVar("user_expdmg", 50)
			TNT1 A 0 A_SetUserVar("user_expradius", 192)
			TNT1 A 0 A_SetUserVar("user_fullexpradius", 0)
			SARG H 4
		Goto DoExplosionDamage
		ContinueFromExplosion:
			SARG IJK 4
		Stop
	}
}

Actor DnD_TestShitter : DnD_Activator {
	States {
		Pickup:
			TNT1 A 0 A_FireCustomMissile("DnD_TestExploder", -2, 0)
			TNT1 A 0 A_FireCustomMissile("DnD_TestExploder", 2, 0)
		Stop
	}
}

Actor DnD_BasePuff {
	+PUFFGETSOWNER
	+PUFFONACTORS
	+HITTRACER
	+MTHRUSPECIES
	+NOGRAVITY
	States {
		Spawn:
			TNT1 AAAA 0
			TNT1 A 35 A_Jump(256, "Init")
		Wait
		DoDamage:
			// takes dmg and damage type as args 0 and 1 respectively
			TNT1 A 0 ACS_NamedExecuteWithResult("DnD Do Impact Damage", Args[DND_ARG_DAMAGE], Args[DND_ARG_DAMAGETYPE], Args[DND_ARG_DAMAGEFLAGS])
			TNT1 A 1
		Stop
		Crash:
			TNT1 A 0 A_SpawnDebris("SparkPuff", 1)
			TNT1 A 0 A_SpawnItemEx("WallHitSpark", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION | SXF_CLIENTSIDE)
			PUFF A 4 bright A_PlaySound("puff/ric")
			PUFF B 4
		Melee:
			PUFF CD 4
		stop
		DontSpawnPuff:
			TNT1 A 1
		Stop
	}
}

Actor DnD_BaseRailPuff {
	+ALWAYSPUFF
	+PUFFGETSOWNER
	+PUFFONACTORS
	+HITTRACER
	+MTHRUSPECIES
	+NOGRAVITY
	States {
		Spawn:
			TNT1 AAAA 0
			TNT1 A 35 A_Jump(256, "Init")
		Wait
		DoDamage:
			// takes dmg and damage type as args 0 and 1 respectively
			TNT1 A 0 ACS_NamedExecuteWithResult("DnD Do Impact Damage", Args[DND_ARG_DAMAGE], Args[DND_ARG_DAMAGETYPE], Args[DND_ARG_DAMAGEFLAGS])
			TNT1 A 1
		Stop
		Crash:
			TNT1 A 1
		stop
	}
}

Actor DnD_BaseProjectile {
	PROJECTILE
	+HITTRACER
	+MTHRUSPECIES
	Damage 0
	
	States {
		Spawn:
			TNT1 A 0 NoDelay A_GiveInventory("DnD_Projectile_SpawnChecks", 1)
			TNT1 A 35 A_Jump(256, "SpawnState")
		Wait
	}
}

Actor DnD_CullSuccess : PowerProtection {
	damagefactor "normal", 1.0
	Powerup.Duration 18
}

// Fast projectiles dont run inventory items in time on spawn, so a manual pre-emptive approach is required through custom inventory checks in wep
Actor DnD_BaseFastProjectile : FastProjectile {
	PROJECTILE
	+HITTRACER
	+MTHRUSPECIES
	Damage 0
}

Actor DnD_Projectile_SpawnChecks : DnD_Activator {
	States {
		Pickup:
			//TNT1 A 0 ACS_NamedExecuteAlways("target test")
			TNT1 A 0 A_JumpIfInTargetInventory("NetherCheck", 1, "ChangeGhost")
		Stop
		ChangeGhost:
			TNT1 A 0 A_ChangeFlag("THRUGHOST", 0)
		Stop
	}
}

Actor DnD_PuffTest : DnD_Activator {
	States {
		Pickup:
			TNT1 A 0 A_FireBullets(0, 0, 1, 0, "DnD_BasePuff")
		Stop
	}
}

/*Actor DnD_TestShitterRail : DnD_Activator {
	States {
		Pickup:
			TNT1 A 0 A_RailAttack(0, 0, 0, "Red", "Black", RGF_SILENT, 0, "TestShitterPuff")
		Stop
	}
}

Actor TestShitterPuff : BulletPuff {
	+PUFFGETSOWNER
	+ALWAYSPUFF
	+HITTRACER
	+PUFFONACTORS
	States {
		Spawn:
			TNT1 A 0
			SARG A 1 ACS_NamedExecuteWithResult("DnD Test Shitscan Damage", 25)
		Stop
		Crash:
			SARG A 1
		Stop
	}
}*/
