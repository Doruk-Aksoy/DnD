enum {
	DND_ORB_ENHANCE,
	DND_ORB_CORRUPT,
	DND_ORB_SPIRIT,
	DND_ORB_REPENT,
	DND_ORB_AFFLUENCE,
	DND_ORB_CALAMITY,
	DND_ORB_PROSPERITY,
	DND_ORB_WISDOM,
	DND_ORB_GREED,
	DND_ORB_VIOLENCE,
	DND_ORB_FORTITUDE,
	DND_ORB_SIN,
	DND_ORB_RICHES,
	DND_ORB_HOLDING
};

// a little precaution for database operation and acs syncs to work properly
Actor OrbUseDelay : PowerDamage {
	damagefactor "normal", 1.0
	powerup.duration 7
}

Actor OrbUseType : Inventory {
	inventory.maxamount 0x7FFFFFFF
}

Actor OrbResult : Inventory {
	inventory.maxamount 0x7FFFFFFF
}

Actor AffluenceCounter : Inventory {
	inventory.maxamount 4
}

Actor DnD_Orb : CustomInventory {
	radius 20
	height 16
	inventory.amount 1
	inventory.maxamount 200
	Inventory.InterHubAmount 200
	inventory.pickupsound "Items/OrbPick"
	+INVENTORY.INVBAR
	+INVENTORY.UNDROPPABLE
	+INVENTORY.PERSISTENTPOWER
	Scale 0.9
	States {
		Nothing:
			TNT1 A 0
		Fail
	}
}

Actor OrbSoundPlayer : DnD_Activator {
	States {
		Pickup:
			TNT1 A 0 A_PlaySound("Items/OrbPick", 7)
			TNT1 A 0 A_SetBlend("60 80 60", 0.75, 10)
		Stop
	}
}

Actor DnD_DroppedOrbBase : DnD_DroppedItem {
	Radius 20
	Height 24
	States {
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_ORB)
			"####" "#" 0 A_PlaySound("Items/OrbDrop")
			"####" "#" 16 Bright
		SpawnLoop:
			"####" "#" 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
		
		See:
		CheckPickup:
			"####" "#" 1 Bright A_JumpIfCloser(32, "Pickup")
		goto SpawnLoop
		
		Pickup:
			"####" "#" 1 Bright A_JumpIf(ACS_NamedExecuteWithResult("DnD Check Special Match", DND_SPECIAL_ORB), "PickupSuccess")
		goto PickupFail

		PickupFail:
			"####" "#" 1 Bright
		goto SpawnLoop
		
		PickupSuccess:
			TNT1 A 0 ACS_NamedExecuteAlways("DnD Give Orb", 0, mass - 1)
		stop
	}
}

Actor OrbOfEnhancement : DnD_Orb {
	inventory.icon "ORB1D0"
	inventory.pickupmessage "\ccOrb pickup:     \c[Y5]Orb of Enhancement\c-"
	States {
		Spawn:
			TNT1 A 0 NoDelay A_PlaySound("Items/OrbDrop")
			ORB1 C -1 Bright
		Stop
		Use:
			TNT1 A 0 A_JumpIfInventory("OrbUseDelay", 1, "Nothing")
			TNT1 A 0 A_JumpIf(!ACS_NamedExecuteWithResult("DND Orb Use Check", DND_ORB_ENHANCE), "Failed")
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use", 0, DND_ORB_ENHANCE)
			TNT1 A 0 A_PlaySound("Items/OrbUse", 7)
			TNT1 A 0 A_GiveInventory("OrbUseDelay", 1)
		Stop
		Failed:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use Message", 0)
		Fail
	}
}

Actor OrbOfEnhancement_Drop : DnD_DroppedOrbBase {
	Radius 20
	Height 24
	States {
		Spawn:
			ORB1 C 0
		Goto Super::SpawnInit
	}
}

Actor CorruptOrb_DamageReduction : PowerDamage {
	powerup.duration 0x7FFFFFFF
	damagefactor "normal", 0.25
}

Actor OrbofCorruption : DnD_Orb {
	inventory.pickupmessage "\ccOrb pickup:     \c[Y5]Orb of Corruption\c-"
	inventory.icon "ORB1B0"
	states {
		Spawn:
			TNT1 A 0 NoDelay A_PlaySound("Items/OrbDrop")
		SpawnFrame:
			ORB1 AAAAAA 1 Bright A_FadeOut(0.075)
			ORB1 AAAAAA 1 Bright A_FadeIn(0.075)
		Loop
		Use:
			TNT1 A 0 A_JumpIfInventory("OrbUseDelay", 1, "Nothing")
			TNT1 A 0 A_JumpIf(!ACS_NamedExecuteWithResult("DND Orb Use Check", DND_ORB_CORRUPT), "Failed")
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use", 0, DND_ORB_CORRUPT)
			TNT1 A 0 A_PlaySound("Items/OrbUse", 7)
			TNT1 A 0 A_GiveInventory("OrbUseDelay", 1)
		Stop
		Failed:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use Message", 0)
		Fail
	}
}

Actor OrbofCorruption_Drop : DnD_DroppedOrbBase {
	Radius 20
	Height 24
	States {
		Spawn:
			ORB1 A 0
		Goto SpawnInit
		
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_ORB)
			"####" "#" 0 A_PlaySound("Items/OrbDrop")
			"####" "#" 16 Bright
		SpawnLoop:
			ORB1 A 1 Bright A_FadeOut(0.075)
			ORB1 A 0 A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 A 1 Bright A_FadeOut(0.075)
			ORB1 A 0 A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 A 1 Bright A_FadeOut(0.075)
			ORB1 A 0 A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 A 1 Bright A_FadeOut(0.075)
			ORB1 A 0 A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 A 1 Bright A_FadeOut(0.075)
			ORB1 A 0 A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 A 1 Bright A_FadeOut(0.075)
			ORB1 A 0 A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 A 1 Bright A_FadeIn(0.075)
			ORB1 A 0 A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 A 1 Bright A_FadeIn(0.075)
			ORB1 A 0 A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 A 1 Bright A_FadeIn(0.075)
			ORB1 A 0 A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 A 1 Bright A_FadeIn(0.075)
			ORB1 A 0 A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 A 1 Bright A_FadeIn(0.075)
			ORB1 A 0 A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 A 1 Bright A_FadeIn(0.075)
			ORB1 A 0 A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
	}
}

Actor OrbofSpirit : DnD_Orb {
	inventory.pickupmessage "\ccOrb pickup:     \c[Y5]Orb of Spirit\c-"
	inventory.icon "ORB1I0"
	states {
		Spawn:
			TNT1 A 0 NoDelay A_PlaySound("Items/OrbDrop")
		SpawnFrame:
			ORB1 EFGH 3 Bright
		Loop
		Use:
			TNT1 A 0 A_JumpIfInventory("OrbUseDelay", 1, "Nothing")
			TNT1 A 0 A_JumpIf(!ACS_NamedExecuteWithResult("DND Orb Use Check", DND_ORB_SPIRIT), "Failed")
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use", 0, DND_ORB_SPIRIT)
			TNT1 A 0 A_PlaySound("Items/OrbUse", 7)
			TNT1 A 0 A_GiveInventory("OrbUseDelay", 1)
		Stop
		Failed:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use Message", 0)
		Fail
	}
}

Actor OrbOfSpirit_Drop : DnD_DroppedOrbBase {
	Radius 20
	Height 24
	States {
		Spawn:
			ORB1 E 0
		Goto SpawnInit
		
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_ORB)
			"####" "#" 0 A_PlaySound("Items/OrbDrop")
			"####" "#" 16 Bright
		SpawnLoop:
			ORB1 E 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 E 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 E 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 F 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 F 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 F 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 G 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 G 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 G 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 H 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 H 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 H 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
	}
}

Actor OrbofRepentance : DnD_Orb {
	inventory.pickupmessage "\ccOrb pickup:     \c[Y5]Orb of Repentance\c-"
	inventory.icon "ORB1Z0"
	states {
		Spawn:
			TNT1 A 0 NoDelay A_PlaySound("Items/OrbDrop")
		SpawnFrame:
			ORB1 TUVWX 3 Bright
		Loop
		Use:
			TNT1 A 0 A_JumpIfInventory("OrbUseDelay", 1, "Nothing")
			TNT1 A 0 A_JumpIf(!ACS_NamedExecuteWithResult("DND Orb Use Check", DND_ORB_REPENT), "Failed")
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use", 0, DND_ORB_REPENT)
			TNT1 A 0 A_PlaySound("Items/OrbUse", 7)
			TNT1 A 0 A_GiveInventory("OrbUseDelay", 1)
		Stop
		Failed:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use Message", 0)
		Fail
	}
}

Actor OrbofRepentance_Drop : DnD_DroppedOrbBase {
	Radius 20
	Height 24
	States {
		Spawn:
			ORB1 T 0
		Goto SpawnInit
		
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_ORB)
			"####" "#" 0 A_PlaySound("Items/OrbDrop")
			"####" "#" 16 Bright
		SpawnLoop:
			ORB1 T 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 T 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 T 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 U 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 U 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 U 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 V 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 V 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 V 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 W 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 W 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 W 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 X 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 X 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 X 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
	}
}

Actor OrbofAffluence : DnD_Orb {
	inventory.pickupmessage "\ccOrb pickup:     \c[Y5]Orb of Affluence\c-"
	inventory.icon "ORB3A0"
	states {
		Spawn:
			TNT1 A 0 NoDelay A_PlaySound("Items/OrbDrop")
		SpawnFrame:
			ORB2 WXYZYX 3 Bright
		Loop
		Use:
			TNT1 A 0 A_JumpIfInventory("OrbUseDelay", 1, "Nothing")
			TNT1 A 0 A_JumpIf(!ACS_NamedExecuteWithResult("DND Orb Use Check", DND_ORB_AFFLUENCE), "Failed")
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use", 0, DND_ORB_AFFLUENCE)
			TNT1 A 0 A_PlaySound("Items/OrbUse", 7)
			TNT1 A 0 A_GiveInventory("OrbUseDelay", 1)
		Stop
		Failed:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use Message", 0)
		Fail
	}
}

Actor OrbofAffluence_Drop : DnD_DroppedOrbBase {
	Radius 20
	Height 24
	States {
		Spawn:
			ORB2 W 0
		Goto SpawnInit
		
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_ORB)
			"####" "#" 0 A_PlaySound("Items/OrbDrop")
			"####" "#" 16 Bright
		SpawnLoop:
			ORB2 W 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 W 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 W 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 X 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 X 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 X 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 Y 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 Y 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 Y 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 Z 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 Z 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 Z 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 Y 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 Y 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 Y 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 X 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 X 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 X 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
	}
}

Actor OrbofCalamity : DnD_Orb {
	inventory.pickupmessage "\ccOrb pickup:     \c[Y5]Orb of Calamity\c-"
	inventory.icon "ORB1N0"
	states {
		Spawn:
			TNT1 A 0 NoDelay A_PlaySound("Items/OrbDrop")
		SpawnFrame:
			ORB1 JKLM 3 Bright
		Loop
		Use:
			TNT1 A 0 A_JumpIfInventory("OrbUseDelay", 1, "Nothing")
			TNT1 A 0 A_JumpIf(!ACS_NamedExecuteWithResult("DND Orb Use Check", DND_ORB_CALAMITY), "Failed")
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use", 0, DND_ORB_CALAMITY)
			TNT1 A 0 A_PlaySound("Items/OrbUse", 7)
			TNT1 A 0 A_GiveInventory("OrbUseDelay", 1)
		Stop
		Failed:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use Message", 0)
		Fail
	}
}

Actor OrbofCalamity_Drop : DnD_DroppedOrbBase {
	Radius 20
	Height 24
	States {
		Spawn:
			ORB1 J 0
		Goto SpawnInit
		
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_ORB)
			"####" "#" 0 A_PlaySound("Items/OrbDrop")
			"####" "#" 16 Bright
		SpawnLoop:
			ORB1 J 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 J 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 J 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 K 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 K 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 K 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 L 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 L 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 L 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 M 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 M 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 M 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
	}
}

Actor OrbofProsperity : DnD_Orb {
	inventory.pickupmessage "\ccOrb pickup:     \c[Y5]Orb of Prosperity\c-"
	inventory.icon "ORB1S0"
	states {
		Spawn:
			TNT1 A 0 NoDelay A_PlaySound("Items/OrbDrop")
		SpawnFrame:
			ORB1 OPQR 3 Bright
		Loop
		Use:
			TNT1 A 0 A_JumpIfInventory("OrbUseDelay", 1, "Nothing")
			TNT1 A 0 A_JumpIf(!ACS_NamedExecuteWithResult("DND Orb Use Check", DND_ORB_PROSPERITY), "Failed")
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use", 0, DND_ORB_PROSPERITY)
			TNT1 A 0 A_PlaySound("Items/OrbUse", 7)
			TNT1 A 0 A_GiveInventory("OrbUseDelay", 1)
		Stop
		Failed:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use Message", 0)
		Fail
	}
}

Actor OrbofProsperity_Drop : DnD_DroppedOrbBase {
	Radius 20
	Height 24
	States {
		Spawn:
			ORB1 O 0
		Goto SpawnInit
		
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_ORB)
			"####" "#" 0 A_PlaySound("Items/OrbDrop")
			"####" "#" 16 Bright
		SpawnLoop:
			ORB1 O 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 O 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 O 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 P 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 P 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 P 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 Q 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 Q 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 Q 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 R 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 R 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB1 R 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
	}
}

Actor OrbofWisdom : DnD_Orb {
	inventory.pickupmessage "\ccOrb pickup:     \c[Y5]Orb of Wisdom\c-"
	inventory.icon "ORB2J0"
	states {
		Spawn:
			TNT1 A 0 NoDelay A_PlaySound("Items/OrbDrop")
		SpawnFrame:
			ORB2 FGHI 3 Bright
		Loop
		Use:
			TNT1 A 0 A_JumpIfInventory("OrbUseDelay", 1, "Nothing")
			TNT1 A 0 A_JumpIf(!ACS_NamedExecuteWithResult("DND Orb Use Check", DND_ORB_WISDOM), "Failed")
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use", 0, DND_ORB_WISDOM)
			TNT1 A 0 A_PlaySound("Items/OrbUse", 7)
			TNT1 A 0 A_GiveInventory("OrbUseDelay", 1)
		Stop
		Failed:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use Message", 0)
		Fail
	}
}

Actor OrbofWisdom_Drop : DnD_DroppedOrbBase {
	Radius 20
	Height 24
	States {
		Spawn:
			ORB2 F 0
		Goto SpawnInit
		
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_ORB)
			"####" "#" 0 A_PlaySound("Items/OrbDrop")
			"####" "#" 16 Bright
		SpawnLoop:
			ORB2 F 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 F 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 F 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 G 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 G 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 G 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 H 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 H 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 H 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 I 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 I 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 I 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
	}
}

Actor OrbofGreed : DnD_Orb {
	inventory.pickupmessage "\ccOrb pickup:     \c[Y5]Orb of Greed\c-"
	inventory.icon "ORB3E0"
	states {
		Spawn:
			TNT1 A 0 NoDelay A_PlaySound("Items/OrbDrop")
		SpawnFrame:
			ORB3 BCDC 3 Bright
		Loop
		Use:
			TNT1 A 0 A_JumpIfInventory("OrbUseDelay", 1, "Nothing")
			TNT1 A 0 A_JumpIf(!ACS_NamedExecuteWithResult("DND Orb Use Check", DND_ORB_GREED), "Failed")
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use", 0, DND_ORB_GREED)
			TNT1 A 0 A_PlaySound("Items/OrbUse", 7)
			TNT1 A 0 A_GiveInventory("OrbUseDelay", 1)
		Stop
		Failed:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use Message", 0)
		Fail
	}
}

Actor OrbofGreed_Drop : DnD_DroppedOrbBase {
	Radius 20
	Height 24
	States {
		Spawn:
			ORB3 B 0
		Goto SpawnInit
		
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_ORB)
			"####" "#" 0 A_PlaySound("Items/OrbDrop")
			"####" "#" 16 Bright
		SpawnLoop:
			ORB3 B 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB3 B 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB3 B 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB3 C 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB3 C 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB3 C 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB3 D 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB3 D 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB3 D 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB3 C 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB3 C 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB3 C 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
	}
}

Actor OrbofViolence : DnD_Orb {
	inventory.pickupmessage "\ccOrb pickup:     \c[Y5]Orb of Violence\c-"
	inventory.icon "ORB2O0"
	states {
		Spawn:
			TNT1 A 0 NoDelay A_PlaySound("Items/OrbDrop")
		SpawnFrame:
			ORB2 KLMN 3 Bright
		Loop
		Use:
			TNT1 A 0 A_JumpIfInventory("OrbUseDelay", 1, "Nothing")
			TNT1 A 0 A_JumpIf(!ACS_NamedExecuteWithResult("DND Orb Use Check", DND_ORB_VIOLENCE), "Failed")
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use", 0, DND_ORB_VIOLENCE)
			TNT1 A 0 A_PlaySound("Items/OrbUse", 7)
			TNT1 A 0 A_GiveInventory("OrbUseDelay", 1)
		Stop
		Failed:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use Message", 0)
		Fail
	}
}

Actor OrbofViolence_Drop : DnD_DroppedOrbBase {
	Radius 20
	Height 24
	States {
		Spawn:
			ORB2 K 0
		Goto SpawnInit
		
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_ORB)
			"####" "#" 0 A_PlaySound("Items/OrbDrop")
			"####" "#" 16 Bright
		SpawnLoop:
			ORB2 K 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 K 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 K 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 L 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 L 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 L 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 M 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 M 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 M 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 N 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 N 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 N 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
	}
}

Actor OrbofFortitude : DnD_Orb {
	inventory.pickupmessage "\ccOrb pickup:     \c[Y5]Orb of Fortitude\c-"
	inventory.icon "ORB2V0"
	states {
		Spawn:
			TNT1 A 0 NoDelay A_PlaySound("Items/OrbDrop")
		SpawnFrame:
			ORB2 PQRSTU 2 Bright
		Loop
		Use:
			TNT1 A 0 A_JumpIfInventory("OrbUseDelay", 1, "Nothing")
			TNT1 A 0 A_JumpIf(!ACS_NamedExecuteWithResult("DND Orb Use Check", DND_ORB_FORTITUDE), "Failed")
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use", 0, DND_ORB_FORTITUDE)
			TNT1 A 0 A_PlaySound("Items/OrbUse", 7)
			TNT1 A 0 A_GiveInventory("OrbUseDelay", 1)
		Stop
		Failed:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use Message", 0)
		Fail
	}
}

Actor OrbofFortitude_Drop : DnD_DroppedOrbBase {
	Radius 20
	Height 24
	States {
		Spawn:
			ORB2 P 0
		Goto SpawnInit
		
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_ORB)
			"####" "#" 0 A_PlaySound("Items/OrbDrop")
			"####" "#" 16 Bright
		SpawnLoop:
			ORB2 P 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 P 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 Q 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 Q 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 R 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 R 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 S 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 S 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 T 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 T 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 U 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 U 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
	}
}

Actor OrbofSin : DnD_Orb {
	inventory.pickupmessage "\ccOrb pickup:     \c[Y5]Orb of Sin\c-"
	inventory.icon "ORB2E0"
	states {
		Spawn:
			TNT1 A 0 NoDelay A_PlaySound("Items/OrbDrop")
		SpawnFrame:
			ORB2 ABCD 3 Bright
		Loop
		Use:
			TNT1 A 0 A_JumpIfInventory("OrbUseDelay", 1, "Nothing")
			TNT1 A 0 A_JumpIf(!ACS_NamedExecuteWithResult("DND Orb Use Check", DND_ORB_SIN), "Failed")
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use", 0, DND_ORB_SIN)
			TNT1 A 0 A_PlaySound("Items/OrbUse", 7)
			TNT1 A 0 A_GiveInventory("OrbUseDelay", 1)
		Stop
		Failed:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use Message", 0)
		Fail
	}
}

Actor OrbofSin_Drop : DnD_DroppedOrbBase {
	Radius 20
	Height 24
	States {
		Spawn:
			ORB2 A 0
		Goto SpawnInit
		
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_ORB)
			"####" "#" 0 A_PlaySound("Items/OrbDrop")
			"####" "#" 16 Bright
		SpawnLoop:
			ORB2 A 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 A 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 A 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 B 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 B 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 B 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 C 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 C 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 C 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 D 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 D 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
			ORB2 D 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
	}
}

Actor OrbofRiches : DnD_Orb {
	inventory.pickupmessage "\ccOrb pickup:     \c[Y5]Orb of Riches\c-"
	inventory.icon "ORB3G0"
	states {
		Spawn:
			TNT1 A 0 NoDelay A_PlaySound("Items/OrbDrop")
		SpawnFrame:
			ORB3 F -1 Bright
		Stop
		Use:
			TNT1 A 0 A_JumpIfInventory("OrbUseDelay", 1, "Nothing")
			TNT1 A 0 A_JumpIf(!ACS_NamedExecuteWithResult("DND Orb Use Check", DND_ORB_RICHES), "Failed")
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use", 0, DND_ORB_RICHES)
			TNT1 A 0 A_PlaySound("Items/OrbUse", 7)
			TNT1 A 0 A_GiveInventory("OrbUseDelay", 1)
		Stop
		Failed:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use Message", 0)
		Fail
	}
}

Actor OrbofRiches_Drop : DnD_DroppedOrbBase {
	Radius 20
	Height 24
	States {
		Spawn:
			ORB3 F 0
		Goto Super::SpawnInit
	}
}

Actor OrbofHolding : DnD_Orb {
	inventory.pickupmessage "\ccOrb pickup:     \c[Y5]Orb of Holding\c-"
	inventory.icon "ORB3I0"
	states {
		Spawn:
			TNT1 A 0 NoDelay A_PlaySound("Items/OrbDrop")
		SpawnFrame:
			ORB3 H -1 Bright
		Stop
		Use:
			TNT1 A 0 A_JumpIfInventory("OrbUseDelay", 1, "Nothing")
			TNT1 A 0 A_JumpIf(!ACS_NamedExecuteWithResult("DND Orb Use Check", DND_ORB_HOLDING), "Failed")
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use", 0, DND_ORB_HOLDING)
			TNT1 A 0 A_PlaySound("Items/OrbUse", 7)
			TNT1 A 0 A_GiveInventory("OrbUseDelay", 1)
		Stop
		Failed:
			TNT1 A 0 ACS_NamedExecuteAlways("DND Orb Use Message", 0)
		Fail
	}
}

Actor OrbofHolding_Drop : DnD_DroppedOrbBase {
	Radius 20
	Height 24
	States {
		Spawn:
			ORB3 H 0
		Goto Super::SpawnInit
	}
}