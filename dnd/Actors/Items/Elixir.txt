Actor ElixirBase : DnD_DroppedItem {
	Radius 20
	Height 24
	States {
		SpawnInit:
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Remove Check Special", 0, mass, DND_SPECIAL_ELIXIR)
			"####" "#" 1 Bright
			"####" "#" 24 Bright
		SpawnLoop:
		Idle:
			"####" "#" 1 Bright A_LookEx(LOF_NOSOUNDCHECK, 0, 28, 0, 360, "CheckPickup")
		Loop
		
		See:
		CheckPickup:
			"####" "#" 1 Bright A_JumpIfCloser(32, "Pickup")
		goto SpawnLoop
		
		Pickup:
			"####" "#" 1 Bright A_JumpIf(ACS_NamedExecuteWithResult("DnD Check Special Match", DND_SPECIAL_CHARM), "PickupCheck2")
		goto PickupFail

		PickupFail:
			"####" "#" 1 Bright
		goto SpawnLoop
		
		PickupCheck2:
			// Check if player has remaining inventory space
			"####" "#" 0 A_JumpIf(ACS_NamedExecuteWithResult("DnD Player Has Spot For Item", mass - 1), "PickupSuccess")
		Goto PickupShowItem
		
		PickupShowItem:
			"####" "#" 0 A_JumpIfInTargetInventory("DnD_PlayerViewsItem", 1, "PickupFail")
			"####" "#" 0 A_JumpIfInTargetInventory("ShowingMenu", 1, "PickupFail")
			"####" "#" 0 A_GiveToTarget("DnD_PlayerViewsItem", 1)
			"####" "#" 0 ACS_NamedExecuteAlways("DnD Preview Item", 0, mass - 1, ACS_NamedExecuteWithResult("DnD Get Target"))
		Goto PickupFail
		
		PickupSuccess:
			TNT1 A 8 ACS_NamedExecuteAlways("DnD Stacked Item Pickup", 0, mass - 1, DND_STACKEDITEM_ELIXIR)
		stop
	}
}

Actor ElixirSoundPlayer : CustomInventory {
	States {
		Pickup:
			TNT1 A 0 A_PlaySound("Items/ElixirPick")
			TNT1 A 0 A_SetBlend("25 99 25", 0.6, 17)
		Stop
	}
}

Actor ElixirOfHealth_Drop : ElixirBase {
	States {
		Spawn:
			ELIX A 0
		Goto Super::SpawnInit
	}
}

Actor ElixirOfArmor_Drop : ElixirBase {
	Translation "168:191=%[0.00,0.00,0.00]:[0.69,1.73,0.54]"
	States {
		Spawn:
			ELIX A 0
		Goto Super::SpawnInit
	}
}

Actor ElixirOfProsperity_Drop : ElixirBase {
	Translation "168:191=%[0.00,0.00,0.00]:[1.01,0.61,0.61]"
	States {
		Spawn:
			ELIX A 0
		Goto Super::SpawnInit
	}
}

Actor ElixirOfLife_Drop : ElixirBase {
	Translation "168:191=%[0.00,0.00,0.00]:[1.41,0.27,0.27]"
	States {
		Spawn:
			ELIX A 0
		Goto Super::SpawnInit
	}
}

Actor ElixirOfStrongness_Drop : ElixirBase {
	Translation "168:191=%[0.00,0.00,0.00]:[0.20,0.87,0.30]"
	States {
		Spawn:
			ELIX A 0
		Goto Super::SpawnInit
	}
}

Actor EElixirOfFortitude_Drop : ElixirBase {
	Translation "168:191=%[0.00,0.00,0.00]:[0.55,0.34,0.34]"
	States {
		Spawn:
			ELIX A 0
		Goto Super::SpawnInit
	}
}

Actor ElixirOfSpeed_Drop : ElixirBase {
	Translation "168:191=%[0.00,0.00,0.00]:[1.93,1.87,0.56]"
	States {
		Spawn:
			ELIX A 0
		Goto Super::SpawnInit
	}
}

Actor ElixirOfDamage_Drop : ElixirBase {
	Translation "168:191=%[0.00,0.00,0.00]:[1.84,0.94,0.12]"
	States {
		Spawn:
			ELIX A 0
		Goto Super::SpawnInit
	}
}

Actor ElixirOfLuck_Drop : ElixirBase {
	Translation "168:191=%[0.00,0.00,0.00]:[0.86,1.05,0.84]"
	States {
		Spawn:
			ELIX A 0
		Goto Super::SpawnInit
	}
}