#ifndef DND_MONSTERDATA_IN
#define DND_MONSTERDATA_IN

#include "DnD_ElitePow.h"

#define DND_CUSTOMMONSTER_ID 65536

enum {
	// Classics
	MONSTER_ZOMBIEMAN,
	MONSTER_SHOTGUNNER,
	MONSTER_CHAINGUNNER,
	MONSTER_DEMON,
	MONSTER_SPECTRE,
	MONSTER_IMP,
	MONSTER_CACODEMON,
	MONSTER_PAINELEMENTAL,
	MONSTER_LOSTSOUL,
	MONSTER_REVENANT,
	MONSTER_HELLKNIGHT,
	MONSTER_BARON,
	MONSTER_FATSO,
	MONSTER_VILE,
	MONSTER_SPIDER,
	MONSTER_MASTERMIND,
	MONSTER_CYBERDEMON,
	MONSTER_NAZI,
	
	// DnD Exclusives
	
	// Zombieman
	MONSTER_ZOMBIEMANGRAY,
	MONSTER_ZOMBIERANGER,
	MONSTER_ZOMBIESMG,
	MONSTER_ZOMBIERAPID,
	MONSTER_ZOMBIEMARINE,
	MONSTER_ZOMBIELOS,
	MONSTER_ZOMBIEPISTOL,
	MONSTER_ZOMBIEQUAKE1,
	MONSTER_ZOMBIEHUNTER,
	MONSTER_ZOMBIEPROPHET,
	
	// Shotgunner
	MONSTER_SSGLOS,
	MONSTER_ZSPECSG,
	MONSTER_SGLOS,
	MONSTER_SAWEDOFF1,
	MONSTER_SAWEDOFF2,
	MONSTER_ROGUE,
	MONSTER_ZOMBIEQUAKE2,
	MONSTER_ZOMBIESSG,
	
	// Chaingunner
	MONSTER_ZOMBIEQUAKE3,
	MONSTER_ZOMBIEMG,
	MONSTER_INITIATE,
	MONSTER_DOUBLEGUNNER,
	MONSTER_CGMAJOR,
	MONSTER_MRROBOT,
	MONSTER_ZSEC,
	MONSTER_ZSPECMG,
	MONSTER_PLASMAZOMBIE,
	MONSTER_BERSERKERGUY,
	
	// Demon
	MONSTER_BLOODDEMON,
	MONSTER_BLOODFIEND,
	MONSTER_CYBERFIEND,
	MONSTER_FLAMEDEMON,
	MONSTER_STONEIMP,
	MONSTER_SCAVENGER,
	MONSTER_SOULEATER,
	MONSTER_NHUMCIGN,
	MONSTER_STONEDEMON,
	MONSTER_BRUTY,
	MONSTER_SATYR,
	MONSTER_EARTHGOLEM,
	MONSTER_RAVAGER,
	MONSTER_PUREBREDDEMON,
	
	// Spectre
	MONSTER_LURKER,
	MONSTER_GRAVEDIGGER,
	MONSTER_DEVOURER,
	MONSTER_NIGHTMAREDEMON,
	
	// Imp
	MONSTER_DARKIMP1,
	MONSTER_VOIDDARKIMP,
	MONSTER_NETHERDARKIMP,
	MONSTER_DARKIMP2,
	MONSTER_IMPABOM,
	MONSTER_STIMP,
	MONSTER_VOIDIMP,
	MONSTER_SOULHARVESTER,
	MONSTER_PYROIMP,
	MONSTER_DEVIL,
	MONSTER_DEVIL2,
	MONSTER_VULGAR,
	MONSTER_UNDEADMAGE,
	MONSTER_SHADOW,
	MONSTER_ROACH,
	
	// Lost Soul
	MONSTER_BABYCACO,
	MONSTER_ETHEREALSOUL,
	MONSTER_FLESHSPAWN,
	MONSTER_GUARDIANCUBE,
	MONSTER_FORGOTTENONE,
	MONSTER_HADESSPHERE,
	MONSTER_WATCHER,
	MONSTER_DARKLICH_SPIRIT,
	
	// Cacodemon
	MONSTER_WEAKENER,
	MONSTER_SHADOWPRIEST,
	MONSTER_GRELL,
	MONSTER_DEATHWHISPERER,
	MONSTER_CACOLICH,
	MONSTER_INFERNO,
	MONSTER_GUARDIAN,
	MONSTER_ENHANCEDCACO,
	MONSTER_EARTHLICH,
	MONSTER_WICKED,
	
	// Pain Elemental
	MONSTER_BLOODLICH,
	MONSTER_HADESELEMENTAL,
	MONSTER_HELLARBITER,
	MONSTER_DEFILER,
	MONSTER_TORTUREDSOUL,
	MONSTER_SHADOWDISCIPLE,
	MONSTER_SENTINEL,
	MONSTER_WRAITH, // add new ones above wraith
	
	// Revenant
	MONSTER_INCARNATE,
	MONSTER_BEAMREVENANT,
	MONSTER_AXEKNIGHT,
	MONSTER_WIDOWMAKER,
	MONSTER_YETI,
	MONSTER_SLUDGEGIANT,
	MONSTER_SLUDGEGIANT2,
	MONSTER_SLUDGEGIANT3,
	MONSTER_CADAVER,
	MONSTER_DARKSERVANT,
	MONSTER_CRAWLER,
	MONSTER_DRAUGR,
	
	// Hell Knight
	MONSTER_BLOODSATYR,
	MONSTER_HELLWARRIOR,
	MONSTER_HELLSFURY,
	MONSTER_BLACKKNIGHT,
	MONSTER_ARCHON,
	MONSTER_WARLORD,
	MONSTER_SKULLWIZARD,
	MONSTER_CYBORGWARRIOR,
	MONSTER_SHADOWBEAST,
	MONSTER_CHAOSSERPENT,
	MONSTER_MOONSATYR,
	MONSTER_ICEGOLEM,
	MONSTER_GLADIATOR,

	// Baron
	MONSTER_LAVADEMON,
	MONSTER_LORDOFHERESY,
	MONSTER_BORMERETH,
	MONSTER_BARBATOS,
	MONSTER_BLOODSEEKER,
	MONSTER_SHADOWWIZARD,
	MONSTER_KJAROCH,
	MONSTER_CYBRUISER,
	MONSTER_BRUISERDEMON,
	MONSTER_MAGMASERPENT,
	MONSTER_DREADKNIGHT,
	MONSTER_MAGMAGOLEM,
	MONSTER_WARMASTER,
	
	// Fatso
	MONSTER_CORPULENT,
	MONSTER_DAEDABUS,
	MONSTER_PALADIN,
	MONSTER_GAMON,
	MONSTER_MEPHISTO,
	MONSTER_MAFIBUS,
	MONSTER_ICEFATSO,
	MONSTER_ABOMINATION,
	MONSTER_GOLDGOLEM,
	
	// Arachnotron
	MONSTER_FUSIONSPIDER,
	MONSTER_RAILARACHNOTRON,
	MONSTER_HELLFORGESPIDER,
	MONSTER_VORE,
	MONSTER_BABYDEMOLISHER,
	MONSTER_CHAINGUNGENERAL,
	MONSTER_CHAINGUNCOMMANDO,
	MONSTER_LEGIONNAIRE,
	MONSTER_MANTICORE,
	
	// ArchVile
	MONSTER_DIABLOIST,
	MONSTER_UNDEADPRIEST,
	MONSTER_UNDEADPRIESTGHOST,
	MONSTER_DEATHVILE,
	MONSTER_HIEROPHANT,
	MONSTER_GURU,
	MONSTER_DEATHKNIGHT,
	MONSTER_HORSHACKER,
	MONSTER_DARKZEALOT,
	MONSTER_FLESHWIZARD,
	
	// Spider Mastermind
	MONSTER_DEMOLISHER,
	MONSTER_ARACHNOPHYTE,
	MONSTER_PSIONICQUEEN,
	MONSTER_ANGELOFDEATH,
	MONSTER_GOLDLICH,
	MONSTER_GOLDLICHFAKE,
	MONSTER_IRONLICH,
	MONSTER_SPIDEROVERLORD,
	MONSTER_DARKLICH,
	
	// Cyberdemon
	MONSTER_CARDINAL,
	MONSTER_TERMINATOR,
	MONSTER_THAMUZ,
	MONSTER_AZAZEL,
	MONSTER_HELLSMITH,
	MONSTER_THANATOS,
	MONSTER_AVATAR,
	MONSTER_CERBERUS,
	
	MONSTER_DREAMINGGOD,
	MONSTER_TORRASQUE,
	MONSTER_MORDECQAI,
	MONSTER_GODSLAYER,
	MONSTER_GOLGOTH
};

#define DND_CUSTOM_IMP_BEGIN MONSTER_DARKIMP1
#define DND_CUSTOM_IMP_END MONSTER_ROACH

#define DND_CUSTOM_DEMON_BEGIN MONSTER_BLOODDEMON
#define DND_CUSTOM_DEMON_END MONSTER_PUREBREDDEMON

#define DND_CUSTOM_SPECTRE_BEGIN MONSTER_LURKER
#define DND_CUSTOM_SPECTRE_END MONSTER_NIGHTMAREDEMON

#define DND_CUSTOM_CACODEMON_BEGIN MONSTER_WEAKENER
#define DND_CUSTOM_CACODEMON_END MONSTER_WICKED

#define DND_CUSTOM_PAINE_BEGIN MONSTER_BLOODLICH
#define DND_CUSTOM_PAINE_END MONSTER_SENTINEL

#define DND_CUSTOM_REVENANT_BEGIN MONSTER_INCARNATE
#define DND_CUSTOM_REVENANT_END MONSTER_DRAUGR

#define DND_CUSTOM_HK_BEGIN MONSTER_BLOODSATYR
#define DND_CUSTOM_HK_END MONSTER_GLADIATOR

#define DND_CUSTOM_BARON_BEGIN MONSTER_LAVADEMON
#define DND_CUSTOM_BARON_END MONSTER_WARMASTER

#define DND_CUSTOM_FATSO_BEGIN MONSTER_CORPULENT
#define DND_CUSTOM_FATSO_END MONSTER_GOLDGOLEM

#define DND_CUSTOM_ARACHNO_BEGIN MONSTER_FUSIONSPIDER
#define DND_CUSTOM_ARACHNO_END MONSTER_MANTICORE

#define DND_CUSTOM_VILE_BEGIN MONSTER_DIABLOIST
#define DND_CUSTOM_VILE_END MONSTER_FLESHWIZARD

#define DND_CUSTOM_SM_BEGIN MONSTER_DEMOLISHER
#define DND_CUSTOM_SM_END MONSTER_DARKLICH

#define DND_CUSTOM_CYBER_BEGIN MONSTER_CARDINAL
#define DND_CUSTOM_CYBER_END MONSTER_CERBERUS

#define DND_BOSS_BEGIN MONSTER_DEMOLISHER
#define LEGENDARY_START MONSTER_DREAMINGGOD
#define LEGENDARY_END MONSTER_GOLGOTH
#define DND_LASTMONSTER_INDEX MONSTER_GOLGOTH
#define DND_MAX_LEGENDARY (DND_LASTMONSTER_INDEX - LEGENDARY_START + 1)
#define MONSTER_COUNT (DND_LASTMONSTER_INDEX + 50) // possible compatibility for other wads' monsters

// this is the single source that gives the monsters their proper class protections
// or their weaknesses
void HandleMonsterClassInnates(int id, int traits, int traits2) {
	int innate = MonsterData[id].flags;
	if(id == MONSTER_IMP || (id >= DND_CUSTOM_IMP_BEGIN && id <= DND_CUSTOM_IMP_END))
		GiveInventory("ImpClassProtection", 1);
	else if(id == MONSTER_DEMON || id == MONSTER_SPECTRE || (id >= DND_CUSTOM_DEMON_BEGIN && id <= DND_CUSTOM_SPECTRE_END))
		GiveInventory("DemonClassProtection", 1);
	else if(id == MONSTER_CACODEMON || (id >= DND_CUSTOM_CACODEMON_BEGIN && id <= DND_CUSTOM_CACODEMON_END))
		GiveInventory("CacoClassProtection", 1);
	else if(id == MONSTER_PAINELEMENTAL || (id >= DND_CUSTOM_PAINE_BEGIN && id <= DND_CUSTOM_PAINE_END))
		GiveInventory("PaineClassProtection", 1);
	else if(id == MONSTER_REVENANT || (id >= DND_CUSTOM_REVENANT_BEGIN && id <= DND_CUSTOM_REVENANT_END))
		GiveInventory("RevenantClassProtection", 1);
	else if(id == MONSTER_HELLKNIGHT || id == MONSTER_BARON || (id >= DND_CUSTOM_HK_BEGIN && id <= DND_CUSTOM_BARON_END))
		GiveInventory("HKClassProtection", 1);
	else if(id == MONSTER_FATSO || (id >= DND_CUSTOM_FATSO_BEGIN && id <= DND_CUSTOM_FATSO_END))
		GiveInventory("FatsoClassProtection", 1);
	else if(id == MONSTER_SPIDER || (id >= DND_CUSTOM_ARACHNO_BEGIN && id <= DND_CUSTOM_ARACHNO_END))
		GiveInventory("ArachnoClassProtection", 1);
	else if(id == MONSTER_VILE || (id >= DND_CUSTOM_VILE_BEGIN && id <= DND_CUSTOM_VILE_END))
		GiveInventory("VileClassProtection", 1);
	else if(id == MONSTER_MASTERMIND || (id >= DND_CUSTOM_SM_BEGIN && id <= DND_CUSTOM_SM_END))
		GiveInventory("SMClassProtection", 1);
	else if(id == MONSTER_CYBERDEMON || (id >= DND_CUSTOM_CYBER_BEGIN && id <= LEGENDARY_END))
		GiveInventory("CyberClassProtection", 1);
		
	if(innate & (DND_MTYPE_UNDEAD_POW | DND_MTYPE_MAGICAL_POW))
		GiveInventory("SilverWeaknesses", 1);
	if(innate & DND_MTYPE_UNDEAD_POW)
		GiveInventory("FireWeakness", 1);
	if(innate & DND_MTYPE_MAGICAL_POW)
		GiveInventory("MagicalCreature", 1);
	if(innate & DND_MTYPE_ROBOTIC_POW)
		GiveInventory("LowEnergyWeakness", 1);
	
	// monster's resist or immunity flags
	if(traits & DND_EXPLOSIVE_RESIST)
		GiveInventory("ExplosiveResist", 1);
	if(traits & DND_BULLET_RESIST)
		GiveInventory("PhysicalResist", 1);
	if(traits2 & DND_ENERGY_RESIST)
		GiveInventory("EnergyResist", 1);
	if(traits2 & DND_MAGIC_RESIST)
		GiveInventory("MagicResist", 1);
	if(traits2 & DND_ELEMENTAL_RESIST)
		GiveInventory("ElementalResist", 1);
		
	if(traits & DND_EXPLOSIVE_NONE)
		GiveInventory("ExplosiveImmunity", 1);
	if(traits2 & DND_BULLET_IMMUNE)
		GiveInventory("PhysicalImmunity", 1);
	if(traits2 & DND_ENERGY_IMMUNE)
		GiveInventory("EnergyImmunity", 1);
	if(traits2 & DND_MAGIC_IMMUNE)
		GiveInventory("MagicImmunity", 1);
	if(traits2 & DND_ELEMENTAL_IMMUNE)
		GiveInventory("ElementalImmunity", 1);
	if(traits2 & DND_ELEMENTAL_WEAKNESS)
		GiveInventory("ElementalWeakness", 1);
		
	if(traits2 & DND_FIRECREATURE) {
		GiveInventory("FireImmunity", 1);
		GiveInventory("IceWeakness", 1);
	}
	if(traits2 & DND_ICECREATURE) {
		GiveInventory("FireWeakness", 1);
		GiveInventory("IceImmunity", 1);
	}
	if(traits2 & DND_STONECREATURE) {
		GiveInventory("StoneCreature", 1);
		GiveInventory("ExplosiveResist", 1);
		GiveInventory("PhysicalResist", 1);
	}
	if(traits2 & DND_EARTHCREATURE) {
		GiveInventory("EarthCreature", 1);
	}
}

enum {
	MONSTER_PET_ZOMBIE
};
#define MAX_PET_TYPES MONSTER_PET_ZOMBIE + 1

enum {
	DND_ZOMBIEMANID,
	DND_SHOTGUNNERID,
	DND_CHAINGUNGUYID,
	DND_DEMONID,
	DND_SPECTREID,
	DND_IMPID,
	DND_CACODEMONID,
	DND_PAINELEMENTALID,
	DND_LOSTSOULID,
	DND_REVENANTID,
	DND_HELLKNIGHTID,
	DND_BARONID,
	DND_FATSOID,
	DND_ARCHVILEID,
	DND_ARACHNOTRONID,
	DND_SPIDERMASTERMINDID,
	DND_CYBERDEMONID,
	DND_NAZIID
};

enum {
	DND_MTYPE_DEMON_POW = 1,
	DND_MTYPE_UNDEAD_POW = 2,
	DND_MTYPE_MAGICAL_POW = 4,
	DND_MTYPE_ROBOTIC_POW = 8,
	DND_MTYPE_ZOMBIE_POW = 16
};

enum {
	DND_MTYPE_DEMON,
	DND_MTYPE_UNDEAD,
	DND_MTYPE_MAGICAL,
	DND_MTYPE_ROBOTIC
};

// first 4 above dictate the basic monster types
#define MONSTER_TYPE_INFO_TAG 0
#define MOSNTER_TYPE_INFO_ICON 1
#define MAX_MONSTER_TYPES 4
str MonsterTypeInfo[MAX_MONSTER_TYPES][2] = {
	{ "MType_Demon", "DNDEDEM" },
	{ "MType_Undead", "DNDEUND" },
	{ "MType_Magical", "DNDEMAG" },
	{ "MType_Robotic", "DNDEROB" }
};

int InferMonsterPower(int mid) {
	if(mid & DND_MTYPE_ROBOTIC_POW) {
		// give priority to demon on half demon half robots
		if(mid & DND_MTYPE_DEMON_POW)
			return DND_MTYPE_DEMON;
		return DND_MTYPE_ROBOTIC;
	}
	if(mid & DND_MTYPE_MAGICAL_POW)
		return DND_MTYPE_MAGICAL;
	if(mid & DND_MTYPE_UNDEAD_POW)
		return DND_MTYPE_UNDEAD;
	return DND_MTYPE_DEMON;
}

int GetMonsterType(int monsterID) {
	int mid = MonsterData[monsterID].flags;
	return InferMonsterPower(mid);
}

int GetCustomMonsterType(int properties) {
	// get the first 5 bits only
	return InferMonsterPower(properties & 0x1F);
}

int GetPetMonsterType(int monsterID) {
	int mid = MonsterData[monsterID].flags;
	if(mid & DND_MTYPE_ROBOTIC_POW) {
		// give priority to demon on half demon half robots
		if(mid & DND_MTYPE_DEMON_POW)
			return DND_MTYPE_DEMON;
		return DND_MTYPE_ROBOTIC;
	}
	if(mid & DND_MTYPE_MAGICAL_POW)
		return DND_MTYPE_MAGICAL;
	if(mid & DND_MTYPE_UNDEAD_POW)
		return DND_MTYPE_UNDEAD;
	return DND_MTYPE_DEMON;
}

typedef struct {
	int health;
	int flags;
} monster_data_T;

monster_data_T MonsterData[DND_LASTMONSTER_INDEX + 1] = {
	{ 20, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZOMBIEMANID,
	{ 30, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_SHOTGUNNERID,
	{ 70, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_CHAINGUNGUYID,
	{ 150, 			DND_MTYPE_DEMON_POW 									},//DND_DEMONID,
	{ 150, 			DND_MTYPE_DEMON_POW 									},//DND_SPECTREID,
	{ 60, 			DND_MTYPE_DEMON_POW 									},//DND_IMPID,
	{ 400, 			DND_MTYPE_DEMON_POW 									},//DND_CACODEMONID,
	{ 400, 			DND_MTYPE_DEMON_POW 									},//DND_PAINELEMENTALID,
	{ 50, 			DND_MTYPE_UNDEAD_POW 									},//DND_LOSTSOULID,
	{ 300, 			DND_MTYPE_UNDEAD_POW 									},//DND_REVENANTID,
	{ 500, 			DND_MTYPE_DEMON_POW 									},//DND_HELLKNIGHTID,
	{ 1000, 		DND_MTYPE_DEMON_POW 									},//DND_BARONID,
	{ 600, 			DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_FATSOID,
	{ 700, 			DND_MTYPE_DEMON_POW 									},//DND_ARCHVILEID,
	{ 500, 			DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_ARACHNOTRONID,
	{ 3000, 		DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_SPIDERMASTERMINDID,
	{ 4000, 		DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_CYBERDEMONID,
	{ 50, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_NAZIID,	
	
	/// Zombieman
	{ 40, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZOMBIEGRAY,
	{ 45, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZOMBIERANGER,
	{ 35, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZOMBIESMG,
	{ 30, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZOMBIERAPID,
	{ 45, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZOMBIEMARINE,
    { 45, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZOMBIELOS,
    { 25, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZOMBIEPISTOL,
    { 55, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZOMBIEQUAKE1,
    { 65, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZOMBIEHUNTER,
    { 50, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_PROPHET,

	// Shotgunner
    { 50, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_SSGLOS,
    { 50, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZSPECSG,
    { 50, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_SGLOS,
    { 50, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_SAWEDOFF1,
    { 50, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_SAWEDOFF2,
    { 65, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ROGUE,
    { 70, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZOMBIEQUAKE2,
    { 75, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZOMBIESSG,

	// Chaingunner
    { 85, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZOMBIEQUAKE3,
    { 85, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZOMBIEMG,
    { 65, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_INITIATE,
    { 100, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_DOUBLEGUNNER,
    { 110, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_CGMAJOR,
    { 100, 			DND_MTYPE_ROBOTIC_POW									},//DND_MRROBOT,
    { 70, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZSEC,
    { 60,			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_ZSPECMG,
	{ 85, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_PLASMAZOMBIE,
	{ 150, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_BERSERKERGUY,

	// Demon
    { 250, 			DND_MTYPE_DEMON_POW										},//DND_BLOODDEMON,
    { 160, 			DND_MTYPE_DEMON_POW										},//DND_BLOODFIEND,
    { 300, 			DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW				},//DND_CYBERFIEND,
    { 200, 			DND_MTYPE_DEMON_POW										},//DND_FLAMEDEMON,
    { 180, 			DND_MTYPE_ROBOTIC_POW									},//DND_STONEIMP,
    { 195, 			DND_MTYPE_DEMON_POW										},//DND_SCAVENGER,
    { 200, 			DND_MTYPE_DEMON_POW										},//DND_SOULEATER,
    { 275, 			DND_MTYPE_DEMON_POW										},//DND_NHUMCIGN,
    { 250, 			DND_MTYPE_ROBOTIC_POW									},//DND_STONEDEMON,
    { 240, 			DND_MTYPE_DEMON_POW										},//DND_BRUTY,
	{ 150, 			DND_MTYPE_DEMON_POW										},//DND_SATYR,
	{ 325, 			DND_MTYPE_MAGICAL_POW									},//DND_EARTHGOLEM,
	{ 250, 			DND_MTYPE_DEMON_POW										},//DND_RAVAGER,
	{ 275, 			DND_MTYPE_DEMON_POW										},//DND_PUREBREDDEMON,

	// Spectre
    { 160, 			DND_MTYPE_DEMON_POW										},//DND_LURKER,
    { 160, 			DND_MTYPE_DEMON_POW										},//DND_GRAVEDIGGER,
    { 175, 			DND_MTYPE_DEMON_POW										},//DND_DEVOURER,
    { 150, 			DND_MTYPE_DEMON_POW										},//DND_NIGHTMAREDEMON,
	
	// Imp
    { 80, 			DND_MTYPE_DEMON_POW										},//DND_DARKIMP1,
    { 100, 			DND_MTYPE_DEMON_POW										},//DND_VOIDDARKIMP,
    { 100, 			DND_MTYPE_DEMON_POW										},//DND_NETHERDARKIMP,
    { 90, 			DND_MTYPE_DEMON_POW										},//DND_DARKIMP2,
    { 80, 			DND_MTYPE_DEMON_POW										},//DND_IMPABOM,
    { 55, 			DND_MTYPE_DEMON_POW										},//DND_STIMP,
    { 65, 			DND_MTYPE_DEMON_POW										},//DND_VOIDIMP,
    { 100, 			DND_MTYPE_DEMON_POW										},//DND_SOULHARVESTER,
    { 60, 			DND_MTYPE_DEMON_POW										},//DND_PYROIMP,
    { 85, 			DND_MTYPE_DEMON_POW										},//DND_DEVIL,
	{ 125, 			DND_MTYPE_DEMON_POW										},//DND_DEVIL2,
    { 70, 			DND_MTYPE_DEMON_POW										},//DND_VULGAR,
    { 80, 			DND_MTYPE_UNDEAD_POW									},//DND_UNDEADMAGE,
	{ 85, 			DND_MTYPE_DEMON_POW										},//DND_SHADOW,
	{ 80, 			DND_MTYPE_DEMON_POW										},//DND_ROACH,

	// Lost Soul
    { 60, 			DND_MTYPE_DEMON_POW										},//DND_BABYCACO,
    { 60, 			DND_MTYPE_UNDEAD_POW									},//DND_ETHEREALSOUL,
    { 50, 			DND_MTYPE_DEMON_POW										},//DND_FLESHSPAWN,
    { 75, 			DND_MTYPE_MAGICAL_POW									},//DND_GUARDIANCUBE,
    { 40, 			DND_MTYPE_UNDEAD_POW									},//DND_FORGOTTENONE,
	{ 35, 			DND_MTYPE_MAGICAL_POW									},//DND_HADESSPHERE,
	{ 100, 			DND_MTYPE_DEMON_POW										},//DND_WATCHER,
	{ 75, 			DND_MTYPE_UNDEAD_POW									},//DND_DARKLICH_SPIRIT,

	// Cacodemon
    { 300, 			DND_MTYPE_DEMON_POW										},//DND_WEAKENER,
    { 250, 			DND_MTYPE_MAGICAL_POW									},//DND_SHADOWPRIEST,
    { 325, 			DND_MTYPE_DEMON_POW										},//DND_GRELL,
    { 500, 			DND_MTYPE_UNDEAD_POW									},//DND_DEATHWHISPERER,
    { 500, 			DND_MTYPE_UNDEAD_POW									},//DND_CACOLICH,
    { 400, 			DND_MTYPE_DEMON_POW										},//DND_INFERNO,
    { 275, 			DND_MTYPE_MAGICAL_POW									},//DND_GUARDIAN,
    { 300, 			DND_MTYPE_DEMON_POW										},//DND_ENHANCEDCACO,
    { 425, 			DND_MTYPE_MAGICAL_POW									},//DND_EARTHLICH,
	{ 300, 			DND_MTYPE_DEMON_POW										},//DND_WICKED,

	// Pain E.
	{ 675, 			DND_MTYPE_MAGICAL_POW									},//DND_BLOODLICH,
	{ 800, 			DND_MTYPE_DEMON_POW										},//DND_HADESELEMENTAL,
	{ 700, 			DND_MTYPE_DEMON_POW										},//DND_HELLARBITER,
	{ 500, 			DND_MTYPE_DEMON_POW										},//DND_DEFILER,
	{ 550, 			DND_MTYPE_DEMON_POW										},//DND_TORTUREDSOUL,
	{ 500, 			DND_MTYPE_MAGICAL_POW									},//DND_SHADOWDISCIPLE,
	{ 750, 			DND_MTYPE_MAGICAL_POW									},//DND_SENTINEL,
	{ 75, 			DND_MTYPE_UNDEAD_POW									},//DND_WRAITH,

	// Revenant
	{ 250, 			DND_MTYPE_UNDEAD_POW									},//DND_INCARNATE,
	{ 250, 			DND_MTYPE_UNDEAD_POW									},//DND_BEAMREVENANT,
	{ 250, 			DND_MTYPE_UNDEAD_POW									},//DND_AXEKNIGHT,
	{ 300, 			DND_MTYPE_UNDEAD_POW									},//DND_WIDOWMAKER,
	{ 350, 			DND_MTYPE_MAGICAL_POW									},//DND_YETI,
	{ 280, 			DND_MTYPE_MAGICAL_POW									},//DND_SLUDGEGIANT,
	{ 140, 			DND_MTYPE_MAGICAL_POW									},//DND_SLUDGEGIANT2,
	{ 70, 			DND_MTYPE_MAGICAL_POW									},//DND_SLUDGEGIANT3,
	{ 350, 			DND_MTYPE_UNDEAD_POW									},//DND_CADAVER,
	{ 275, 			DND_MTYPE_MAGICAL_POW									},//DND_DARKSERVANT,
	{ 325, 			DND_MTYPE_DEMON_POW										},//DND_CRAWLER,
	{ 350, 			DND_MTYPE_UNDEAD_POW									},//DND_DRAUGR,

	// Hell Knight
	{ 550, 			DND_MTYPE_DEMON_POW 									},//DND_BLOODSATYR,
	{ 400, 			DND_MTYPE_DEMON_POW 									},//DND_HELLWARRIOR,
	{ 600, 			DND_MTYPE_DEMON_POW 									},//DND_HELLSFURY,
	{ 550, 			DND_MTYPE_UNDEAD_POW 									},//DND_BLACKKNIGHT,
	{ 700, 			DND_MTYPE_DEMON_POW 									},//DND_ARCHON,
	{ 650, 			DND_MTYPE_DEMON_POW 									},//DND_WARLORD,
	{ 500, 			DND_MTYPE_MAGICAL_POW 									},//DND_SKULLWIZARD,
	{ 650, 			DND_MTYPE_ROBOTIC_POW 									},//DND_CYBORGWARRIOR,
	{ 400, 			DND_MTYPE_DEMON_POW 									},//DND_SHADOWBEAST,
	{ 450, 			DND_MTYPE_DEMON_POW 									},//DND_CHAOSSERPENT,
	{ 750, 			DND_MTYPE_DEMON_POW 									},//DND_MOONSATYR,
	{ 400, 			DND_MTYPE_MAGICAL_POW 									},//DND_ICEGOLEM,
	{ 450, 			DND_MTYPE_DEMON_POW 									},//DND_GLADIATOR,

	// Baron
	{ 1000, 		DND_MTYPE_DEMON_POW 									},//DND_LAVADEMON,
	{ 1100, 		DND_MTYPE_DEMON_POW 									},//DND_LORDOFHERESY,
	{ 1200, 		DND_MTYPE_DEMON_POW 									},//DND_BORMERETH,
	{ 1100, 		DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_BARBATOS,
	{ 1000, 		DND_MTYPE_DEMON_POW 									},//DND_BLOODSEEKER,
	{ 900, 			DND_MTYPE_MAGICAL_POW 									},//DND_SHADOWWIZARD,
	{ 1650, 		DND_MTYPE_DEMON_POW 									},//DND_KJAROCH,
	{ 1500, 		DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_CYBRUISER,
	{ 1500, 		DND_MTYPE_DEMON_POW 									},//DND_BRUISERDEMON,
	{ 900, 			DND_MTYPE_DEMON_POW 									},//DND_MAGMASERPENT,
	{ 900, 			DND_MTYPE_UNDEAD_POW 									},//DND_DREADKNIGHT,
	{ 900, 			DND_MTYPE_MAGICAL_POW 									},//DND_MAGMAGOLEM,
	{ 1250, 		DND_MTYPE_DEMON_POW 									},//DND_WARMASTER,
	
	// Fatso
	{ 850, 			DND_MTYPE_DEMON_POW 									},//DND_CORPULENT,
	{ 850, 			DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_DAEDABUS,
	{ 775, 			DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_PALADIN,
	{ 875, 			DND_MTYPE_MAGICAL_POW 									},//DND_GAMON,
	{ 900, 			DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_MEPHISTO,
	{ 1100, 		DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_MAFIBUS,
	{ 650, 			DND_MTYPE_DEMON_POW 									},//DND_ICEFATSO,
	{ 775, 			DND_MTYPE_DEMON_POW 									},//DND_ABOMINATION,
	{ 1000, 		DND_MTYPE_MAGICAL_POW 									},//DND_GOLDGOLEM,
	
	// Arachnotron
	{ 500, 			DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_FUSIONSPIDER,
	{ 450, 			DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_RAILARACHNOTRON,
	{ 700, 			DND_MTYPE_DEMON_POW 									},//DND_HELLFORGESPIDER,
	{ 700, 			DND_MTYPE_DEMON_POW 									},//DND_VORE,
	{ 700, 			DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_BABYDEMOLISHER,
	{ 550, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_CHAINGUNGENERAL,
	{ 550, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_CHAINGUNCOMMANDO,
	{ 600, 			DND_MTYPE_UNDEAD_POW | DND_MTYPE_ZOMBIE_POW 			},//DND_LEGIONNAIRE,
	{ 650, 			DND_MTYPE_DEMON_POW 									},//DND_MANTICORE,
	
	// ArchVile
	{ 850, 			DND_MTYPE_DEMON_POW 									},//DND_DIABLOIST,
	{ 800, 			DND_MTYPE_UNDEAD_POW 									},//DND_UNDEADPRIEST,
	{ 100, 			DND_MTYPE_UNDEAD_POW 									},// DND_UNDEADPRIESTGHOST,
	{ 800, 			DND_MTYPE_DEMON_POW 									},//DND_DEATHVILE,
	{ 1250, 		DND_MTYPE_DEMON_POW 									},//DND_HIEROPHANT,
	{ 800, 			DND_MTYPE_MAGICAL_POW 									},//DND_GURU,
	{ 900, 			DND_MTYPE_UNDEAD_POW 									},//DND_DEATHKNIGHT,
	{ 900, 			DND_MTYPE_UNDEAD_POW 									},//DND_HORSHACKER,
	{ 750, 			DND_MTYPE_MAGICAL_POW 									},//DND_DARKZEALOT,
	{ 625, 			DND_MTYPE_DEMON_POW 									},//DND_FLESHWIZARD,
	
	// Spider Mastermind
	{ 4000, 		DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_DEMOLISHER,
	{ 3500, 		DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_ARACHNOPHYTE,
	{ 4000, 		DND_MTYPE_DEMON_POW 									},//DND_PSIONICQUEEN,
	{ 4000, 		DND_MTYPE_DEMON_POW 									},//DND_ANGELOFDEATH,
	{ 4750, 		DND_MTYPE_MAGICAL_POW 									},//DND_GOLDLICH,
	{ 300, 			DND_MTYPE_MAGICAL_POW 									},//DND_GOLDLICHFAKE,
	{ 4000, 		DND_MTYPE_MAGICAL_POW 									},//DND_IRONLICH,
	{ 4000, 		DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_SPIDEROVERLORD,
	{ 4000, 		DND_MTYPE_MAGICAL_POW 									},//DND_DARKLICH,
	
	// Cyberdemon
	{ 4500, 		DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			}, //DND_CARDINAL,
	{ 5750, 		DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_TERMINATOR,
	{ 4750, 		DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_THAMUZ,
	{ 5250, 		DND_MTYPE_DEMON_POW 									},//DND_AZAZEL,
	{ 6000, 		DND_MTYPE_DEMON_POW 									},//DND_HELLSMITH,
	{ 6500, 		DND_MTYPE_DEMON_POW | DND_MTYPE_ROBOTIC_POW 			},//DND_THANATOS,
	{ 5500, 		DND_MTYPE_MAGICAL_POW 									},//DND_AVATAR,
	{ 6000, 		DND_MTYPE_DEMON_POW 									},//DND_CERBERUS,
	
	// Legendaries
	{ 20000, 		DND_MTYPE_DEMON_POW 									}, //DND_DREAMER,
	{ 16500, 		DND_MTYPE_DEMON_POW 									},//DND_TORRASQUE,
	{ 18500, 		DND_MTYPE_DEMON_POW 									},//DND_MORDECQAI,
	{ 13500, 		DND_MTYPE_ROBOTIC_POW 									},//DND_GODSLAYER,
	{ 17500, 		DND_MTYPE_DEMON_POW 									} //DND_GOLGOTH
};

int MonsterPetTypeList[MAX_PET_TYPES] = {
	DND_MTYPE_UNDEAD_POW
};

bool IsBoss() {
	int id = MonsterProperties[ActivatorTID() - DND_MONSTERTID_BEGIN].id;
	return id == MONSTER_MASTERMIND || id == MONSTER_CYBERDEMON || id >= DND_BOSS_BEGIN;
}

bool IsMonsterIdBoss(int id) {
	return id == MONSTER_MASTERMIND || id == MONSTER_CYBERDEMON || id >= DND_BOSS_BEGIN;
}

bool IsDemon() {
	return MonsterData[MonsterProperties[ActivatorTID() - DND_MONSTERTID_BEGIN].id].flags & DND_MTYPE_DEMON_POW;
}

bool IsZombie() {
	return MonsterData[MonsterProperties[ActivatorTID() - DND_MONSTERTID_BEGIN].id].flags & DND_MTYPE_ZOMBIE_POW;
}

bool IsUndead() {
	return MonsterData[MonsterProperties[ActivatorTID() - DND_MONSTERTID_BEGIN].id].flags & DND_MTYPE_UNDEAD_POW;
}

bool IsRobotic() {
	return MonsterData[MonsterProperties[ActivatorTID() - DND_MONSTERTID_BEGIN].id].flags & DND_MTYPE_ROBOTIC_POW;
}

bool IsLostSoul() {
	int id = MonsterProperties[ActivatorTID() - DND_MONSTERTID_BEGIN].id;
	return (id >= MONSTER_BABYCACO && id <= MONSTER_DARKLICH_SPIRIT) || id == MONSTER_LOSTSOUL;
}

bool isPet(int tid) {
	return tid >= DND_PETTID_BEGIN && tid < DND_MONSTERTID_BEGIN;
}

// all demon barons, fatsos or arachnos or bosses that are demons can drop a soul ammo
bool CanDropSoulAmmo() {
	int mid = MonsterProperties[ActivatorTID() - DND_MONSTERTID_BEGIN].id;
	return (mid == MONSTER_BARON || (mid >= DND_CUSTOM_BARON_BEGIN && mid <= DND_CUSTOM_BARON_END) || 
			mid == MONSTER_FATSO || (mid >= DND_CUSTOM_FATSO_BEGIN && mid <= DND_CUSTOM_FATSO_END) ||
			mid == MONSTER_SPIDER || (mid >= DND_CUSTOM_ARACHNO_BEGIN && mid <= DND_CUSTOM_ARACHNO_END) ||
			isBoss()) && MonsterData[mid].flags & DND_MTYPE_DEMON;
}

// First element on each list is the "Vanilla" monster, rest follow from their variations with Var1 to VarX
/*
	Monster rarities formulated:
		- Common: 1000 weight. These are vanilla tier monsters. Either vanilla monsters, or monsters with similar behavior reside here.
		- Uncommon: 750 weight. These are a monsters that are just a tad bit stronger than vanilla.
		- Rare - 1: 600 weight. These guys are strong. You don't want to encounter them early on.
		- Rare - 2: 500 weight. A variant of rare, a little more rare.
		- Very Rare: 300 weight. These guys... You'd really not want to be against these but they are still better than seeing a Legendary monster.
		- Epic: 250 weight. Truly dangerous. High threat monsters.
*/

enum {
	DND_MWEIGHT_COMMON = 1000,
	DND_MWEIGHT_UNCOMMON = 750,
	DND_MWEIGHT_RARE1 = 600,
	DND_MWEIGHT_RARE2 = 500,
	DND_MWEIGHT_VERYRARE = 300,
	DND_MWEIGHT_EPIC = 250,
	DND_MWEIGHT_ENDMARKER = -1
};

#define MAX_MONSTER_CATEGORIES 17
#define MAX_MONSTER_VARIATIONS 16
int Monster_Weights[MAX_MONSTER_CATEGORIES][MAX_MONSTER_VARIATIONS] = {
    // Zombieman
    { 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE1, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_RARE1, 
		DND_MWEIGHT_ENDMARKER
	},
    // Shotgunguy
    { 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_RARE1, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE1, 
		DND_MWEIGHT_VERYRARE, 
		DND_MWEIGHT_ENDMARKER 
	},
    // Chaingunguy
    { 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_VERYRARE, 
		DND_MWEIGHT_EPIC, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_VERYRARE, 
		DND_MWEIGHT_RARE1, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_VERYRARE, 
		DND_MWEIGHT_ENDMARKER
	},
    // Demon
    { 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE1, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE1, 
		DND_MWEIGHT_RARE1, 
		DND_MWEIGHT_VERYRARE, 
		DND_MWEIGHT_VERYRARE, 
		DND_MWEIGHT_EPIC, 
		DND_MWEIGHT_ENDMARKER
	},
    // Spectre
    { 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_ENDMARKER
	},
    // Imp
    { 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE1, 
		DND_MWEIGHT_RARE1 
	},
    // Caco
    { 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_RARE1, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_VERYRARE,
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_RARE1, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_VERYRARE,
		DND_MWEIGHT_RARE1, 
		DND_MWEIGHT_ENDMARKER
	},
    // Pain Elemental
    { 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_VERYRARE, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE1, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_VERYRARE,
		DND_MWEIGHT_ENDMARKER 
	},
    // Lost Soul
    { 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_VERYRARE,
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_VERYRARE,
		DND_MWEIGHT_ENDMARKER 
	},
    // Revenant
    { 
		DND_MWEIGHT_COMMON,
		DND_MWEIGHT_COMMON,
		DND_MWEIGHT_UNCOMMON,
		DND_MWEIGHT_UNCOMMON,
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_ENDMARKER
	},
    // HellKnight
    { 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_UNCOMMON,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_VERYRARE,
		DND_MWEIGHT_VERYRARE,
		DND_MWEIGHT_ENDMARKER
	},
    // Baron
    { 
		DND_MWEIGHT_COMMON,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_UNCOMMON,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_UNCOMMON,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_VERYRARE,
		DND_MWEIGHT_VERYRARE,
		DND_MWEIGHT_EPIC,
		DND_MWEIGHT_ENDMARKER 
	},
    // Fatso
    { 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_RARE1, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_VERYRARE, 
		DND_MWEIGHT_VERYRARE, 
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_COMMON,
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_VERYRARE,
		DND_MWEIGHT_ENDMARKER
	},
    // ArchVile
    { 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_EPIC,
		DND_MWEIGHT_UNCOMMON,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_VERYRARE,
		DND_MWEIGHT_VERYRARE,
		DND_MWEIGHT_EPIC,
		DND_MWEIGHT_EPIC,
		DND_MWEIGHT_ENDMARKER
	},
    // Arachno
    { 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_COMMON,
		DND_MWEIGHT_COMMON,
		DND_MWEIGHT_UNCOMMON,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_VERYRARE,
		DND_MWEIGHT_ENDMARKER
	},
    // Spider Mastermind
    { 
		DND_MWEIGHT_COMMON,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_RARE1, 
		DND_MWEIGHT_RARE2,
		DND_MWEIGHT_EPIC,
		DND_MWEIGHT_RARE1,
		DND_MWEIGHT_VERYRARE,
		DND_MWEIGHT_ENDMARKER 
	},
    // Cyberdemon
    { 
		DND_MWEIGHT_COMMON, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_UNCOMMON, 
		DND_MWEIGHT_VERYRARE, 
		DND_MWEIGHT_VERYRARE, 
		DND_MWEIGHT_EPIC, 
		DND_MWEIGHT_RARE2, 
		DND_MWEIGHT_EPIC,
		DND_MWEIGHT_ENDMARKER 
	}
};

str LegendaryMonsters[DND_MAX_LEGENDARY] = {
	"DreamingGod",
	"Torrasque",
	"Mordecqai",
	"GodSlayer",
	"Golgoth"
};

#endif